#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Markov Computations
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lettrine[lraise=0.1]{M}{any}
\end_layout

\end_inset

 of the results and derivations in this chapter are taken directly from
 
\begin_inset CommandInset citation
LatexCommand cite
key "kemmeny1976finite"
literal "true"

\end_inset

, though the derivations presented here are likely much more detailed.
 The former reference focuses on Markov chains more generally, and is the
 appropriate source to consult for general questions.
\end_layout

\begin_layout Section
Representing models
\end_layout

\begin_layout Standard
Consider the simple model of fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Example-model"

\end_inset

.
 We can express this model in a computer-readable manner in many different
 ways, but one relatively human-friendly manner is TML.
 TML is a text-based language explicitly developed for representing Markov
 chain usage models 
\begin_inset CommandInset citation
LatexCommand cite
key "prowell2000tml"
literal "true"

\end_inset

.
 The given model is equivalent to the following TML.
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/example.eps
	scale 75

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Example-model"

\end_inset

Example model
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 1
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout LyX-Code
model example
\end_layout

\begin_layout LyX-Code
[Enter]  ($  1  $)  "a"  [A]
\end_layout

\begin_layout LyX-Code
[A]      ($ 1/2 $)  "b"  [B]
\end_layout

\begin_layout LyX-Code
         ($ 1/2 $)  "c"  [C]
\end_layout

\begin_layout LyX-Code
[B]      ($ 1/2 $)  "b"  [B]
\end_layout

\begin_layout LyX-Code
         ($ 1/4 $)  "c"  [C]
\end_layout

\begin_layout LyX-Code
         ($ 1/4 $)  "e"  [Exit]
\end_layout

\begin_layout LyX-Code
[C]      ($ 1/4 $)  "a"  [A]
\end_layout

\begin_layout LyX-Code
         ($ 1/2 $)  "e"  [Exit]
\end_layout

\begin_layout LyX-Code
         ($ 1/4 $)  "f"  [Exit]
\end_layout

\begin_layout LyX-Code
end
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
A short primer on TML is included as Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:A-Brief-TML"

\end_inset

, but we note that whitespace is not significant to TML, and the model could
 have been written in the following form, where the probabilities are inferred.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 1
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout LyX-Code
($assume(1) normalize(1)$)
\end_layout

\begin_layout LyX-Code
model example
\end_layout

\begin_layout LyX-Code
[Enter]   "a" [A]
\end_layout

\begin_layout LyX-Code
[A]       "b" [B]
\end_layout

\begin_layout LyX-Code
          "c" [C]
\end_layout

\begin_layout LyX-Code
[B] ($2$) "b" [B]
\end_layout

\begin_layout LyX-Code
          "c" [C]
\end_layout

\begin_layout LyX-Code
          "e" [Exit]
\end_layout

\begin_layout LyX-Code
[C]       "a" [A]
\end_layout

\begin_layout LyX-Code
    ($2$) "e" [Exit]
\end_layout

\begin_layout LyX-Code
          "f" [Exit]
\end_layout

\begin_layout LyX-Code
end
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
There are two special states in this model: the 
\emph on
source
\emph default
 or start state 
\family typewriter
[Enter]
\family default
, and the 
\emph on
sink
\emph default
 or stop state 
\family typewriter
[Exit]
\family default
.
 The sink state represents the end of a single use and thus no usage events
 are possible from this state.
\end_layout

\begin_layout Standard
This model can be described by two matrices.
 For these matrices let the states be indexed in the order 
\family typewriter
[Enter]
\family default
, 
\family typewriter
[A]
\family default
, 
\family typewriter
[B]
\family default
, 
\family typewriter
[C]
\family default
, and 
\family typewriter
[Exit]
\family default
, and let the stimuli be indexed in alphabetic order.
 The first matrix is the 
\emph on
(state) transition matrix
\emph default
, 
\begin_inset Formula $P=[p_{i,j}]$
\end_inset

, for which 
\begin_inset Formula $p_{i,j}$
\end_inset

 is the probability that the next state is 
\begin_inset Formula $j$
\end_inset

 given that the current state is 
\begin_inset Formula $i$
\end_inset

.
 For the example model the transition matrix is the following.
\begin_inset Formula 
\[
P=\left[\begin{array}{ccccc}
0 & 1 & 0 & 0 & 0\\
0 & 0 & \frac{1}{2} & \frac{1}{2} & 0\\
0 & 0 & \frac{1}{2} & \frac{1}{4} & \frac{1}{4}\\
0 & \frac{1}{4} & 0 & 0 & \frac{3}{4}\\
1 & 0 & 0 & 0 & 0
\end{array}\right]
\]

\end_inset

Note that the example matrix has been made 
\emph on
recurrent
\emph default
 by connecting 
\family typewriter
[Exit]
\family default
 back to 
\family typewriter
[Enter]
\family default
 with probability one.
 This will be important for several computations, and is assumed where necessary.
 Note that there are two transitions from state 
\family typewriter
[C]
\family default
 to state 
\family typewriter
[Exit]
\family default
; these two transitions are mutually exclusive, so the probability that
 the next state is 
\family typewriter
[Exit]
\family default
 given that the current state is 
\family typewriter
[C]
\family default
 is the sum of the two: 
\begin_inset Formula $\frac{1}{4}+\frac{1}{2}=\frac{3}{4}$
\end_inset

.
 We can represent the transition matrix in R as follows, remembering that
 we need to use column-major form.
\end_layout

\begin_layout LyX-Code
P <- matrix(c(
\end_layout

\begin_layout LyX-Code
  0,   0,   0,   0,   1,
\end_layout

\begin_layout LyX-Code
  1,   0,   0, 1/4,   0,
\end_layout

\begin_layout LyX-Code
  0, 1/2, 1/2,   0,   0,
\end_layout

\begin_layout LyX-Code
  0, 1/2, 1/4,   0,   0,
\end_layout

\begin_layout LyX-Code
  0,   0, 1/4, 3/4,   0), nrow=5)
\end_layout

\begin_layout Standard
For many computations it will be useful to have a reduced matrix 
\begin_inset Formula $Q=[q_{i,j}]$
\end_inset

 in which the row and column for the model sink have been removed.
 For the example model the reduced matrix is the following.
\begin_inset Formula 
\[
Q=\left[\begin{array}{cccc}
0 & 1 & 0 & 0\\
0 & 0 & \frac{1}{2} & \frac{1}{2}\\
0 & 0 & \frac{1}{2} & \frac{1}{4}\\
0 & \frac{1}{4} & 0 & 0
\end{array}\right]
\]

\end_inset

Both 
\begin_inset Formula $P$
\end_inset

 and 
\begin_inset Formula $Q$
\end_inset

 are always square matrices.
 We can extract the 
\begin_inset Formula $Q$
\end_inset

 matrix from the 
\begin_inset Formula $P$
\end_inset

 matrix in R as follows.
\end_layout

\begin_layout LyX-Code
n <- nrow(P)
\end_layout

\begin_layout LyX-Code
Q <- P[-n,-n]
\end_layout

\begin_layout Standard
The second matrix is the 
\emph on
stimulus (occurrence) matrix
\emph default
 
\begin_inset Formula $S=[s_{i,j}]$
\end_inset

, for which 
\begin_inset Formula $s_{i,j}$
\end_inset

 is the probability that the next usage event (or 
\emph on
stimulus
\emph default
) will be 
\begin_inset Formula $j$
\end_inset

, given that the current state is 
\begin_inset Formula $i$
\end_inset

.
 For the example model the stimulus matrix is the following.
\begin_inset Formula 
\[
S=\left[\begin{array}{ccccc}
1 & 0 & 0 & 0 & 0\\
0 & \frac{1}{2} & \frac{1}{2} & 0 & 0\\
0 & \frac{1}{2} & \frac{1}{4} & \frac{1}{4} & 0\\
\frac{1}{4} & 0 & 0 & \frac{1}{2} & \frac{1}{4}
\end{array}\right]
\]

\end_inset

The usage models used here are deterministic; a stimulus can only label
 one outgoing transition from a state, so there is no need to sum transition
 probabilities in the stimulus matrix.
 We can represent the stimulus matrix in R as follows.
\end_layout

\begin_layout LyX-Code
S <- matrix(c(
\end_layout

\begin_layout LyX-Code
  1,   0,   0, 1/4,
\end_layout

\begin_layout LyX-Code
  0, 1/2, 1/2,   0,
\end_layout

\begin_layout LyX-Code
  0, 1/2, 1/4,   0,
\end_layout

\begin_layout LyX-Code
  0,   0, 1/4, 1/2,
\end_layout

\begin_layout LyX-Code
  0,   0,   0, 1/4), nrow=4)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It will occasionally be convenient to discuss the probability of a transition
 from state 
\begin_inset Formula $i$
\end_inset

 to state 
\begin_inset Formula $j$
\end_inset

 labeled with stimulus 
\begin_inset Formula $k$
\end_inset

.
 This probability will be denoted 
\begin_inset Formula $p_{i,j,k}$
\end_inset

 when needed.
 The 
\emph on
restriction
\emph default
 of a matrix 
\begin_inset Formula $A$
\end_inset

 to just those elements corresponding to stimulus 
\begin_inset Formula $k$
\end_inset

 will be denoted 
\begin_inset Formula $A|_{k}$
\end_inset

.
 Thus 
\begin_inset Formula $Q|_{k}=[q_{i,j,k}]$
\end_inset

 for fixed 
\begin_inset Formula $k$
\end_inset

, and we also have the following.
\begin_inset Formula 
\[
Q=\sum_{k}Q|_{k}
\]

\end_inset


\end_layout

\begin_layout Standard
Throughout the rest of this document, the source will be assumed to have
 index one, while the sink will be assumed to have the highest index 
\begin_inset Formula $n$
\end_inset

.
 The number of stimuli for a model will be denoted 
\begin_inset Formula $s$
\end_inset

.
 Thus 
\begin_inset Formula $P$
\end_inset

 is always an 
\begin_inset Formula $n\times n$
\end_inset

 matrix, while 
\begin_inset Formula $S$
\end_inset

 is always an 
\begin_inset Formula $(n-1)\times s$
\end_inset

 matrix, since there can be no outgoing arcs (other than the unlabeled recurrenc
e loop) from the sink.
\end_layout

\begin_layout Standard
For every state 
\begin_inset Formula $i$
\end_inset

 in a connected model, there is a non-zero probability path from the source
 to 
\begin_inset Formula $i$
\end_inset

, and a non-zero probability path from 
\begin_inset Formula $i$
\end_inset

 to the sink.
 Because of the recurrence loop the graph of the model is strongly connected,
 meaning that from any state 
\begin_inset Formula $i$
\end_inset

 there is a path to any other state 
\begin_inset Formula $j$
\end_inset

.
 It follows that 
\begin_inset Formula $P$
\end_inset

 is an irreducible matrix (see Theorem 6.2.24 in 
\begin_inset CommandInset citation
LatexCommand cite
key "horn1985matrix"
literal "true"

\end_inset

).
 All models will be assumed to be connected in this manner.
\end_layout

\begin_layout Section
Computing the number of occurrences of a state in a test case
\end_layout

\begin_layout Standard
The number of occurrences of a state in a random walk from source to sink
 (a test case) can be computed using the reduced matrix 
\begin_inset Formula $Q$
\end_inset

.
 If the sink is made absorbing (letting 
\begin_inset Formula $p_{n,n}=1$
\end_inset

 and 
\begin_inset Formula $p_{n,1}=0$
\end_inset

), then one can compute the number of occurrences of a state prior to absorption
 at the sink.
 Let 
\begin_inset Formula $T$
\end_inset

 denote the set of transient (non-absorbing) states, which will be every
 state other than the sink.
 Let 
\begin_inset Formula $n_{i,j}$
\end_inset

 be a random variable counting the number of occurrences of state 
\begin_inset Formula $j$
\end_inset

 prior to absorption, given that one starts in state 
\begin_inset Formula $i$
\end_inset

 (if 
\begin_inset Formula $i=j$
\end_inset

 then we count the initial occurence, too, and use 
\begin_inset Formula $\delta_{i,j}$
\end_inset

 to do that).
 From 
\begin_inset Formula $i$
\end_inset

 we may move to absorbing state 
\begin_inset Formula $k$
\end_inset

 (in our models, the sink 
\begin_inset Formula $n$
\end_inset

) with probability 
\begin_inset Formula $p_{i,k}$
\end_inset

 and gain contribution 
\begin_inset Formula $\delta_{i,j}$
\end_inset

.
 Otherwise we move to a transient state 
\begin_inset Formula $k$
\end_inset

 and gain contribution 
\begin_inset Formula $\delta_{i,j}$
\end_inset

 from the initial state plus 
\begin_inset Formula $n_{k,j}$
\end_inset

 from the later steps of the realization.
 Since these different possibilities are disjoint, we can simply sum them
 up.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
This derivation may seem excessive, but we include this detail to provide
 a pattern for future derivations which may be less obvious.
 We will skip the initial steps, which are 
\begin_inset Quotes eld
\end_inset

obvious,
\begin_inset Quotes erd
\end_inset

 in future derivations.
\end_layout

\end_inset


\begin_inset Formula 
\begin{align}
\E{n_{i,j}} & =\E{\sum_{k\notin T}p_{i,k}\delta_{i,j}+\sum_{k\in T}p_{i,k}(\delta_{i,j}+n_{k,j})}\nonumber \\
 & =\E{\sum_{k\notin T}p_{i,k}\delta_{i,j}}+\E{\sum_{k\in T}p_{i,k}(\delta_{i,j}+n_{k,j})}\nonumber \\
 & =\sum_{k\notin T}\E{p_{i,k}\delta_{i,k}}+\sum_{k\in T}\E{p_{i,k}(\delta_{i,j}+n_{k,j})}\nonumber \\
 & =\sum_{k\notin T}p_{i,k}\delta_{i,j}+\sum_{k\in T}p_{i,k}\E{\delta_{i,j}+n_{k,j}}\nonumber \\
 & =\sum_{k\notin T}p_{i,k}\delta_{i,j}+\sum_{k\in T}p_{i,k}\left(\delta_{i,j}+\E{n_{k,j}}\right)\nonumber \\
 & =\sum_{k\notin T}p_{i,k}\delta_{i,j}+\sum_{k\in T}p_{i,k}\delta_{i,j}+\sum_{k\in T}p_{i,k}\E{n_{k,j}}\nonumber \\
 & =\sum_{k}p_{i,k}\delta_{i,j}+\sum_{k\in T}p_{i,k}\E{n_{k,j}}\nonumber \\
 & =\delta_{i,j}\sum_{k}p_{i,k}+\sum_{k\in T}p_{i,k}\E{n_{k,j}}\nonumber \\
 & =\delta_{i,j}+\sum_{k\in T}p_{i,k}\E{n_{k,j}}\label{eq:E(n(i,j))}
\end{align}

\end_inset

Let 
\begin_inset Formula $N=\left[\E{n_{i,j}}\right]$
\end_inset

 be the matrix of these expectations.
 Then eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:E(n(i,j))"
plural "false"
caps "false"
noprefix "false"

\end_inset

 can be re-written in matrix form as follows.
\begin_inset Formula 
\begin{align}
N & =I+QN\nonumber \\
N-QN & =I\nonumber \\
(I-Q)N & =I\nonumber \\
N & =(I-Q)^{-1}\label{eq:N}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
The matrix 
\begin_inset Formula $N$
\end_inset

 defined by eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:N"

\end_inset

 is called the 
\emph on
fundamental matrix
\emph default
 for absorbing chains.
 Many Markov chain results can be obtained from this fundamental matrix.
 The expected number of occurences of each state exists and is finite (because
 absorption is certain); we can conclude that the inverse in eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:N"

\end_inset

 exists.
\end_layout

\begin_layout Standard
What about the variance associated with this expectation? We need to find
 the second moment 
\begin_inset Formula $\E{n_{i,j}^{2}}$
\end_inset

, and we can do this using the same method as we did for 
\begin_inset Formula $\E{n_{i,j}}$
\end_inset

, above.
 If we start in state 
\begin_inset Formula $i$
\end_inset

 then we may move to an absorbing state 
\begin_inset Formula $k$
\end_inset

 (in the specific case of our models, only the sink 
\begin_inset Formula $n$
\end_inset

) with probability 
\begin_inset Formula $p_{i,k}$
\end_inset

 and gain contribution 
\begin_inset Formula $\delta_{i,j}^{2}$
\end_inset

.
 Otherwise we move to a transient state 
\begin_inset Formula $k$
\end_inset

 and gain the square of the sum of 
\begin_inset Formula $\delta_{i,j}$
\end_inset

 (from the initial state) and 
\begin_inset Formula $n_{k,j}$
\end_inset

 (from the later steps).
 This gives the following equation where, we note, 
\begin_inset Formula $\delta_{i,j}^{2}=\delta_{i,j}$
\end_inset

.
\begin_inset Formula 
\begin{align}
\E{n_{i,j}^{2}} & =\sum_{k\notin T}p_{i,k}\delta_{i,j}^{2}+\sum_{k\in T}p_{i,k}\E{(\delta_{i,j}+n_{k,j})^{2}}\nonumber \\
 & =\sum_{k\notin T}p_{i,k}\delta_{i,j}^{2}+\sum_{k\in T}p_{i,k}\E{\delta_{i,j}^{2}+2\delta_{i,j}n_{k,j}+n_{k,j}^{2}}\nonumber \\
 & =\sum_{k\notin T}p_{i,k}\delta_{i,j}^{2}+\sum_{k\in T}p_{i,k}\E{\delta_{i,j}^{2}}+\E{2\delta_{i,j}n_{k,j}}+\E{n_{k,j}^{2}}\nonumber \\
 & =\sum_{k\notin T}p_{i,k}\delta_{i,j}+\sum_{k\in T}p_{i,k}\left(\delta_{i,j}+2\delta_{i,j}\E{n_{k,j}}+\E{n_{k,j}^{2}}\right)\nonumber \\
 & =\sum_{k\notin T}p_{i,k}\delta_{i,j}+\sum_{k\in T}p_{i,k}\delta_{i,j}+\sum_{k\in T}p_{i,k}2\delta_{i,j}\E{n_{k,j}}+\sum_{k\in T}p_{i,k}\E{n_{k,j}^{2}}\nonumber \\
 & =\delta_{i,j}\sum_{k}p_{i,k}+2\delta_{i,j}\sum_{k\in T}p_{i,k}\E{n_{k,j}}+\sum_{k\in T}p_{i,k}\E{n_{k,j}^{2}}\nonumber \\
 & =1+2\sum_{k\in T}p_{j,k}\E{n_{k,j}}+\sum_{k\in T}p_{i,k}\E{n_{k,j}^{2}}\label{eq:E(n2(i,j))}
\end{align}

\end_inset

Let 
\begin_inset Formula $N_{2}=\left[\E{n_{i,j}^{2}}\right]$
\end_inset

 be the matrix of these expectations.
 Then eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:E(n2(i,j))"

\end_inset

 can be re-written in matrix form as follows.
\begin_inset Formula 
\begin{align}
N_{2} & =I+2(QN)_{d}+QN_{2}\nonumber \\
N_{2}-QN_{2} & =I+2(QN)_{d}\nonumber \\
N_{2}(I-Q) & =I+2(QN)_{d}\nonumber \\
N_{2} & =(I-Q)^{-1}(I+2(QN)_{d})\nonumber \\
N_{2} & =N(I+2(QN)_{d})\nonumber \\
N_{2} & =N+2N(QN)_{d}\label{eq:N2-1}
\end{align}

\end_inset

Since we already know 
\begin_inset Formula $N=I+QN$
\end_inset

, we can conclude that 
\begin_inset Formula $QN=N-I$
\end_inset

.
 We substitute in eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:N2-1"

\end_inset

 and obtain the following.
\begin_inset Formula 
\begin{align}
N_{2} & =N+2N(N-I)_{d}\nonumber \\
 & =N+2NN_{d}-2N\nonumber \\
 & =2NN_{d}-N\nonumber \\
 & =N(2N_{d}-I)\label{eq:N2}
\end{align}

\end_inset

Now, with eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:N2"

\end_inset

 in hand, we can compute the matrix of variances as 
\begin_inset Formula $\left[\Var{n_{i,j}}\right]=N_{2}-N\circ N$
\end_inset

.
\end_layout

\begin_layout Standard
These results allow the computation of the expected number of occurrences
 for each state and the associated variance by the R function in algorithm
 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:N"

\end_inset

.
 Note that for a usage model one is primarily concerned with only the first
 row of the returned matrices, since one is concerned with the behavior
 when the model is started from the source.
 The results obtained for the example model are presented in table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:N"

\end_inset

.
\begin_inset Float algorithm
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:N"

\end_inset

Compute the expected number of occurrences of each state
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
# Compute the non-terminal expectation and
\end_layout

\begin_layout LyX-Code
# variance matrices for the stochastic matrix
\end_layout

\begin_layout LyX-Code
# P.
\end_layout

\begin_layout LyX-Code
#
\end_layout

\begin_layout LyX-Code
# P: a row-stochastic matrix
\end_layout

\begin_layout LyX-Code
# return: list(N,V) where
\end_layout

\begin_layout LyX-Code
#   N: the expected occurrence of each state
\end_layout

\begin_layout LyX-Code
#   V: the associated variances
\end_layout

\begin_layout LyX-Code
get_nte <- function(P) {
\end_layout

\begin_layout LyX-Code
   n <- nrow(P)
\end_layout

\begin_layout LyX-Code
   Q <- P[-n, -n]
\end_layout

\begin_layout LyX-Code
   N <- solve(diag(n - 1) - Q)
\end_layout

\begin_layout LyX-Code
   V <- N %*% (2 * diag(diag(N)) - diag(n - 1)) - N * N
\end_layout

\begin_layout LyX-Code
   list(N, V)
\end_layout

\begin_layout LyX-Code
}
\end_layout

\end_inset


\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:N"

\end_inset

Expected occurrence and associated variance for each state
\end_layout

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
State
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Occurrence
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Variance
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(visits per test case)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[Enter]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.000
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[A]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.231
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.284 0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[B]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.231
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.556
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[C]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.923 1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.497 0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[Exit]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.000
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.000
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $l$
\end_inset

 denote the number of state transitions from the source to the sink in a
 test case.
 The expected length 
\begin_inset Formula $\E l$
\end_inset

 of a test case generated from a Markov chain usage model can be quickly
 computed once 
\begin_inset Formula $N$
\end_inset

 is known by just summing the expected occurrences of each state.
\begin_inset Formula 
\[
\E l=\E{\sum_{k}n_{1,k}}=\sum_{k}\E{n_{1,k}}
\]

\end_inset

That is, the average length of a test case is the number of state transitions
 from the source to the sink.
 Note that 
\begin_inset Formula $\E l$
\end_inset

 does not include the sink; the total average number of 
\emph on
state visits
\emph default
 (including the sink) is one more, since the sink is always visited exactly
 once.
 In a later section we will revisit this and also discuss how to obtain
 an associated variance.
\end_layout

\begin_layout Section
Computing the long-run state probabilities
\end_layout

\begin_layout Standard
Assume that many test cases (random walks from source to sink) are generated
 from a usage model.
 For each state one can sum the number of occurrences of that state, and
 then divide by this by the total number of occurrences of all states.
 As the number of test cases becomes very large, this ratio will approach
 a fixed value called the 
\emph on
long-run occupancy
\emph default
 or 
\emph on
long-run probability
\emph default
 of the state.
 Since the usage model is always in one of its states, the sum of all long-run
 occupancies is one.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\Pi=[\pi_{1},\pi_{2},\ldots,\pi_{n}]$
\end_inset

 be the vector of long-run probabilities for the 
\begin_inset Formula $n$
\end_inset

 states.
 This vector can be found for a given transition matrix 
\begin_inset Formula $P$
\end_inset

 as the unique stochastic vector solution to the left-eigenvector equation
 for eigenvalue 1.
\begin_inset Formula 
\begin{equation}
\Pi=\Pi P\label{eq:Perron}
\end{equation}

\end_inset

The left-eigenvector 
\begin_inset Formula $\Pi$
\end_inset

 is sometimes called the 
\emph on
Perron
\emph default
 eigenvector.
 Eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Perron"

\end_inset

 is equivalent to the following system of equations.
\begin_inset Formula 
\begin{align*}
\pi_{1} & =\pi_{1}p_{1,1}+\pi_{2}p_{2,1}+\cdots+\pi_{n}p_{n,1}\\
\pi_{2} & =\pi_{1}p_{1,2}+\pi_{2}p_{2,2}+\cdots+\pi_{n}p_{n,2}\\
 & \vdots\\
\pi_{n} & =\pi_{1}p_{1,n}+\pi_{2}p_{2,n}+\cdots+\pi_{n}p_{n,n}\\
1 & =\pi_{1}+\pi_{2}+\cdots+\pi_{n}
\end{align*}

\end_inset

Note that there are 
\begin_inset Formula $n$
\end_inset

 unknowns and 
\begin_inset Formula $n+1$
\end_inset

 equations.
 Incidentally, each row of 
\begin_inset Formula $P^{\infty}=\lim_{n\rightarrow\infty}P^{n}$
\end_inset

 is equal to the vector 
\begin_inset Formula $\Pi$
\end_inset

, unless 
\begin_inset Formula $P$
\end_inset

 is periodic 
\begin_inset CommandInset citation
LatexCommand cite
key "kemmeny1976finite"
literal "true"

\end_inset

.
 There are many ways to solve this system.
 For a simple solution by hand, back-substitution will work just fine using
 the above equations.
\end_layout

\begin_layout Standard
The fundamental matrix 
\begin_inset Formula $N$
\end_inset

 can also be used to obtain 
\begin_inset Formula $\Pi$
\end_inset

.
 The average number of state visits in a test case is 
\begin_inset Formula $\E l+1$
\end_inset

.
 The fraction of time one spends in state 
\begin_inset Formula $i$
\end_inset

 in the long run is 
\begin_inset Formula $\pi_{i}$
\end_inset

, so the average number of times state 
\begin_inset Formula $i$
\end_inset

 will be visited in a single test case is 
\begin_inset Formula $\pi_{i}(\E l+1)$
\end_inset

.
 We conclude the following.
\begin_inset Formula 
\begin{align}
\E{n_{1,i}} & =\pi_{i}\left(\E l+1\right)\nonumber \\
\pi_{i} & =\frac{\E{n_{1,i}}}{\E l+1}\label{eq:pi}
\end{align}

\end_inset

Note that 
\begin_inset Formula $\E{n_{1,n}}$
\end_inset

 is not computed by equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:N"

\end_inset

, but we can conclude that 
\begin_inset Formula $\E{n_{1,n}}=1$
\end_inset

 since the sink is always visited exactly once per test case.
 Algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Compute-the-Perron"

\end_inset

 uses this relationship to compute 
\begin_inset Formula $\Pi$
\end_inset

.
 The results for the example model are presented in table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:pi"

\end_inset

.
 The algorithm does not give a value for 
\family typewriter
[Exit]
\family default
, but that can be obtained by subtracting the sum of the other values from
 one.
\begin_inset Float algorithm
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:Compute-the-Perron"

\end_inset

Compute the Perron eigenvector (long-run probabilities)
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
# Compute the Perron eigenvector for the
\end_layout

\begin_layout LyX-Code
# stochastic matrix P and return it.
 The
\end_layout

\begin_layout LyX-Code
# computation is performed by computation
\end_layout

\begin_layout LyX-Code
# of the fundamental matrix.
\end_layout

\begin_layout LyX-Code
#
\end_layout

\begin_layout LyX-Code
# P: a square row-stochastic matrix
\end_layout

\begin_layout LyX-Code
# N: the fundamental matrix, if available
\end_layout

\begin_layout LyX-Code
# return: the Perron eigenvector
\end_layout

\begin_layout LyX-Code
get_pi <- function(P, N) {
\end_layout

\begin_layout LyX-Code
   n <- nrow(P)
\end_layout

\begin_layout LyX-Code
   if (nargs() < 2) {
\end_layout

\begin_layout LyX-Code
      N <- get_nte(P)[[1]]
\end_layout

\begin_layout LyX-Code
   }
\end_layout

\begin_layout LyX-Code
   len <- 1 + sum(N[1, ])
\end_layout

\begin_layout LyX-Code
   pi <- N[1, ]/len
\end_layout

\begin_layout LyX-Code
   append(pi, c(1 - sum(pi)))
\end_layout

\begin_layout LyX-Code
}
\end_layout

\end_inset


\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:pi"

\end_inset

Long-run occupancies
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
State
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Long-run Occupancy
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[Enter]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.185 7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[A]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.228 6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[B]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.228 6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[C]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.171 4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[Exit]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.195 7
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
An alternate method for obtaining the long run distribution is to use an
 iterative method called the 
\emph on
power method
\emph default
.
 Given the 
\begin_inset Formula $i$
\end_inset

th guess at the long-run distribution 
\begin_inset Formula $\Pi_{i}$
\end_inset

, one computes a slightly better guess by 
\begin_inset Formula $\Pi_{i+1}=\Pi_{i}P$
\end_inset

.
 This method is guaranteed to converge to the Perron eigenvector if the
 matrix is 
\emph on
primitive
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
after "p. 516"
key "horn1985matrix"
literal "true"

\end_inset

.
 Without going into too much detail, if there is a non-zero entry on the
 diagonal then the matrix is primitive (though the converse is not true).
 Thus if 
\begin_inset Formula $p_{j,j}\neq0$
\end_inset

 for any 
\begin_inset Formula $j$
\end_inset

, then the power method will converge to the Perron eigenvector.
\end_layout

\begin_layout Standard
One way to guarantee primitivity is to introduce a 
\begin_inset Quotes eld
\end_inset

dummy
\begin_inset Quotes erd
\end_inset

 state 
\begin_inset Formula $d$
\end_inset

 with a self-loop to ensure primitivity (that is, 
\begin_inset Formula $p_{d,d}>0$
\end_inset

), apply the power method, then 
\begin_inset Quotes eld
\end_inset

remove
\begin_inset Quotes erd
\end_inset

 the dummy state and correct for its presence.
 This can be done by adding the dummy state on the recurrence loop from
 the sink to the source, so 
\begin_inset Formula $p_{n,d}=1$
\end_inset

, 
\begin_inset Formula $p_{d,d}=1/2$
\end_inset

, and 
\begin_inset Formula $p_{d,1}=1/2$
\end_inset

.
 Flow always passes straight through the dummy state, so any of the probability
 mass absorbed by the dummy state can be evenly redistributed among the
 other states.
 This change can be made to the example model's transition matrix 
\begin_inset Formula $P$
\end_inset

 as follows.
\begin_inset Formula 
\[
P=\left[\begin{array}{cccccc}
0 & 1 & 0 & 0 & 0 & 0\\
0 & 0 & \frac{1}{2} & \frac{1}{2} & 0 & 0\\
0 & 0 & \frac{1}{2} & \frac{1}{4} & \frac{1}{4} & 0\\
0 & \frac{1}{4} & 0 & 0 & \frac{3}{4} & 0\\
0 & 0 & 0 & 0 & 0 & 1\\
\frac{1}{2} & 0 & 0 & 0 & 0 & \frac{1}{2}
\end{array}\right]
\]

\end_inset

(Note that the matrix was primitive 
\emph on
before
\emph default
 this change, since 
\begin_inset Formula $p_{3,3}\neq0$
\end_inset

.) This change guarantees primitivity by making 
\begin_inset Formula $p_{d,d}\neq0$
\end_inset

.
 The power method is then applied to yield the long-run probabilities 
\begin_inset Formula $\Pi$
\end_inset

.
 The entry for the dummy state is dropped from 
\begin_inset Formula $\Pi$
\end_inset

 and the vector is re-normalized to obtain the correct long-run probabilities.
 This is actually easier than it sounds; algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:power-method"

\end_inset

 implements this approach.
 For the example model convergence to within 
\begin_inset Formula $1\times10^{-6}$
\end_inset

 takes 46 iterations starting from the default guess.
\begin_inset Float algorithm
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:power-method"

\end_inset

Compute the approximation to the Perron eigenvector via the power method
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
# Compute the Perron eigenvector for the row
\end_layout

\begin_layout LyX-Code
# stochastic matrix P and return it.
  The
\end_layout

\begin_layout LyX-Code
# computation is performed using the power
\end_layout

\begin_layout LyX-Code
# method.
\end_layout

\begin_layout LyX-Code
#
\end_layout

\begin_layout LyX-Code
# P: a row-stochastic matrix
\end_layout

\begin_layout LyX-Code
# g: (optional) an initial guess
\end_layout

\begin_layout LyX-Code
# return: list(y,step) where
\end_layout

\begin_layout LyX-Code
#   y: an approximation of the Perron eigenvector
\end_layout

\begin_layout LyX-Code
#   step: the number of iterations required
\end_layout

\begin_layout LyX-Code
get_pi_approx <- function(P, g) {
\end_layout

\begin_layout LyX-Code
   n <- nrow(P)
\end_layout

\begin_layout LyX-Code
   d <- n + 1
\end_layout

\begin_layout LyX-Code
   P <- rbind(cbind(P, 0), 0)
\end_layout

\begin_layout LyX-Code
   P[n, d] = 1
\end_layout

\begin_layout LyX-Code
   P[d, d] = 1/2
\end_layout

\begin_layout LyX-Code
   P[d, 1] = 1/2
\end_layout

\begin_layout LyX-Code
   P[n, 1] = 0
\end_layout

\begin_layout LyX-Code
   if (missing(g)) {
\end_layout

\begin_layout LyX-Code
      yold <- rep(1/d, d)
\end_layout

\begin_layout LyX-Code
   } else {
\end_layout

\begin_layout LyX-Code
      g <- c(g, g[n] * 2)
\end_layout

\begin_layout LyX-Code
      yold <- g/sum(g)
\end_layout

\begin_layout LyX-Code
   }
\end_layout

\begin_layout LyX-Code
   y <- yold %*% P
\end_layout

\begin_layout LyX-Code
   step <- 1
\end_layout

\begin_layout LyX-Code
   limit <- 1e-06
\end_layout

\begin_layout LyX-Code
   while (sum(abs(yold - y)) > limit) {
\end_layout

\begin_layout LyX-Code
      step = step + 1
\end_layout

\begin_layout LyX-Code
      yold = y
\end_layout

\begin_layout LyX-Code
      y = y %*% P
\end_layout

\begin_layout LyX-Code
   }
\end_layout

\begin_layout LyX-Code
   y = y[1:5]
\end_layout

\begin_layout LyX-Code
   y = y/sum(y)
\end_layout

\begin_layout LyX-Code
   list(y, step)
\end_layout

\begin_layout LyX-Code
}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Performing sensitivity analysis
\end_layout

\begin_layout Standard
A change in a transition probability impacts the occupancies of all states
 since the model is ergodic.
 Consider the example model and the exit arcs from state 
\family typewriter
[C]
\family default
.
 If one changes the probabilities of 
\family typewriter
"e"
\family default
 or 
\family typewriter
"f"
\family default
 to 0.9, this has a significant effect on the model.
 Alternately, changing the probability of 
\family typewriter
"a"
\family default
 to 0.9 has a very different effect.
 Suppose we are attempting to validate a model against our expectations
 for what a 
\begin_inset Quotes eld
\end_inset

use
\begin_inset Quotes erd
\end_inset

 should look like.
 We discover that the model is spending far too much time in one state versus
 another.
 One way to determine how to adjust model probabilities to correct this
 is to use sensitivity analysis.
\end_layout

\begin_layout Standard
For each pair of state 
\begin_inset Formula $i$
\end_inset

 and 
\begin_inset Formula $j$
\end_inset

 in the model such that 
\begin_inset Formula $0<p_{i,j}<1$
\end_inset

, we can set 
\begin_inset Formula $p_{i,j}$
\end_inset

 to some value 
\begin_inset Formula $0<q<1$
\end_inset

 (adjusting the other probabilities, of course) and compute the long-run
 occupancies.
 We will use the following notation for this new vector.
\begin_inset Formula 
\[
\Pi^{(p_{i,j}=q)}=\left[\pi_{k}^{(p_{i,j}=q)}\right]
\]

\end_inset

The 
\emph on
sensitivity
\emph default
 of state 
\begin_inset Formula $k$
\end_inset

 with respect to the transition from state 
\begin_inset Formula $i$
\end_inset

 to state 
\begin_inset Formula $j$
\end_inset

 is defined as follows.
\begin_inset Formula 
\[
z_{i,j,k}=\frac{\pi_{k}^{(p_{i,j}=0.95)}-\pi_{k}^{(p_{i,j}=0.05)}}{0.90}
\]

\end_inset


\end_layout

\begin_layout Standard
The matrix of sensitivities is computed by algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:sensitivities"

\end_inset

.
 The sensitivities for the example model are given in table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:sensitivities"

\end_inset

.
 We interpret the sensitivities as the effect that increasing the transition
 probability has on the long-run occupancy of each state.
 That is, we would expect that increasing the transition probability from
 state 
\family typewriter
[A]
\family default
 to state 
\family typewriter
[B]
\family default
 will decrease the long-run occupancy of state 
\family typewriter
[C]
\family default
 and increase the long-run occupancy of state 
\family typewriter
[B]
\family default
.
\end_layout

\begin_layout Standard
Suppose that one wishes to direct more of the model's flow to state 
\family typewriter
[C]
\family default
.
 Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:sensitivities"

\end_inset

 indicates that the best way to do so is to increase the probability associated
 with the arc from state 
\family typewriter
[A]
\family default
 to state 
\family typewriter
[C]
\family default
, as this is where we find the largest positive value in the column for
 state 
\family typewriter
[C]
\family default
.
 The best way to increase the length of a test case is to decrease the long-run
 occupancy of state 
\family typewriter
[Exit]
\family default
, which can be done by increasing the probability associated with the transition
 from state 
\family typewriter
[B]
\family default
 to state 
\family typewriter
[B]
\family default
.
 
\begin_inset Float algorithm
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:sensitivities"

\end_inset

Compute the matrix of sensitivities
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
# Compute the matrix of arc sensitivities.
\end_layout

\begin_layout LyX-Code
# The first column of the returned matrix
\end_layout

\begin_layout LyX-Code
# is the source state, the second column is
\end_layout

\begin_layout LyX-Code
# the target state.
 The remaining columns
\end_layout

\begin_layout LyX-Code
# are the changes in the occupancies.
\end_layout

\begin_layout LyX-Code
#
\end_layout

\begin_layout LyX-Code
# P: the state transition matrix
\end_layout

\begin_layout LyX-Code
# pi: the (optional) long run occupancies
\end_layout

\begin_layout LyX-Code
# return: the sensitivities matrix
\end_layout

\begin_layout LyX-Code
get_sensitivities <- function(P, pi) {
\end_layout

\begin_layout LyX-Code
   n <- nrow(P)
\end_layout

\begin_layout LyX-Code
   if (missing(pi)) {
\end_layout

\begin_layout LyX-Code
      pi <- get_pi_approx(P)
\end_layout

\begin_layout LyX-Code
   }
\end_layout

\begin_layout LyX-Code
   Z <- matrix(rep(c(0), (n + 2)), nrow = 1)
\end_layout

\begin_layout LyX-Code
   m <- 1
\end_layout

\begin_layout LyX-Code
   for (i in 1:n) {
\end_layout

\begin_layout LyX-Code
      for (j in 1:n) {
\end_layout

\begin_layout LyX-Code
         if (0 < P[i, j] && P[i, j] < 1) {
\end_layout

\begin_layout LyX-Code
            t <- P[i, ]
\end_layout

\begin_layout LyX-Code
            x <- 1 - P[i, j]
\end_layout

\begin_layout LyX-Code
            P[i, ] = t/x * 0.05
\end_layout

\begin_layout LyX-Code
            P[i, j] = 0.95
\end_layout

\begin_layout LyX-Code
            ph <- get_pi_approx(P, pi)[[1]]
\end_layout

\begin_layout LyX-Code
            P[i, ] = t/x * 0.95
\end_layout

\begin_layout LyX-Code
            P[i, j] = 0.05
\end_layout

\begin_layout LyX-Code
            pl <- get_pi_approx(P, pi)[[1]]
\end_layout

\begin_layout LyX-Code
            Z = rbind(Z, 0)
\end_layout

\begin_layout LyX-Code
            Z[m, 1:2] = c(i, j)
\end_layout

\begin_layout LyX-Code
            Z[m, 3:(n + 2)] = (ph - pl)/0.9
\end_layout

\begin_layout LyX-Code
            m = m + 1
\end_layout

\begin_layout LyX-Code
            P[i, ] = t
\end_layout

\begin_layout LyX-Code
         }
\end_layout

\begin_layout LyX-Code
      }
\end_layout

\begin_layout LyX-Code
   }
\end_layout

\begin_layout LyX-Code
   Z[1:m - 1, ]
\end_layout

\begin_layout LyX-Code
}
\end_layout

\end_inset


\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:sensitivities"

\end_inset

Transition sensitivities
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="7">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="decimal" decimal_point="." valignment="top">
<column alignment="decimal" decimal_point="." valignment="top">
<column alignment="decimal" decimal_point="." valignment="top">
<column alignment="decimal" decimal_point="." valignment="top">
<column alignment="decimal" decimal_point="." valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
From
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
To
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[Enter]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[A]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[B]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[C]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[Exit]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[A]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[B]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.047 25
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.094 49
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.378 0
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.189 0
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.047 24
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[A]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[C]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.047 25
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.094 49
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.378 0
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.189 0
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.047 24
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[B]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[B]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.163 9
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.201 7
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.680 8
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.151 3
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.163 9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[B]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[C]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.003 152
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.037 82
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.182 8
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.138 7
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.003 151
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[B]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[Exit]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.080 67
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.064 54
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.161 3
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.064 54
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.080 67
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[C]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[A]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.132 7
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.096 50
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.096 50
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.072 37
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.132 7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[C]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[Exit]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.132 7
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.096 50
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.096 50
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.072 37
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.132 7
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Computing other long run statistics
\end_layout

\begin_layout Standard
The long run occupancy of the transition from state 
\begin_inset Formula $i$
\end_inset

 to state 
\begin_inset Formula $j$
\end_inset

 is obtained as 
\begin_inset Formula $\pi_{i}p_{i,j}$
\end_inset

.
 The long run occupancy for a particular stimulus 
\begin_inset Formula $\sigma_{k}$
\end_inset

 can likewise be obtained by summing the long run occupancies of the arcs
 labeled with the stimulus.
\begin_inset Formula 
\begin{equation}
\sigma_{k}=\frac{1}{1-\pi_{n}}\sum_{i=1}^{n-1}\pi_{i}s_{i,k}\label{eq:sigma_k}
\end{equation}

\end_inset

The factor 
\begin_inset Formula $1/(1-\pi_{n})$
\end_inset

 in equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:sigma_k"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is used to remove the sink from the computation and re-normalize the vector;
 otherwise the 
\begin_inset Formula $\sigma_{i}$
\end_inset

 will not sum to one since some probability mass is absorbed by the sink
 in 
\begin_inset Formula $\pi_{n}$
\end_inset

 but the sink does not contribute to any stimuli.
 Algorithm ZZZ computes the stimulus occupancies given the state long-run
 occupancies and the stimulus matrix.
\end_layout

\begin_layout Section
Mean First Passage
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $m_{i,j}$
\end_inset

 be a random variable counting the number of state transitions until the
 first visit to state 
\begin_inset Formula $j$
\end_inset

, given that one starts in state 
\begin_inset Formula $i$
\end_inset

.
 We have two possibilities.
\end_layout

\begin_layout Itemize
We move directly from state 
\begin_inset Formula $i$
\end_inset

 to state 
\begin_inset Formula $j$
\end_inset

 in one step with probability 
\begin_inset Formula $p_{i,j}$
\end_inset

.
\end_layout

\begin_layout Itemize
We move to a state 
\begin_inset Formula $k\neq j$
\end_inset

 with probability 
\begin_inset Formula $p_{i,k}$
\end_inset

, and then subsequently move to 
\begin_inset Formula $j$
\end_inset

 with 
\begin_inset Formula $m_{k,j}$
\end_inset

 steps, plus the initial step.
\end_layout

\begin_layout Standard
These possibilities are disjoint (exactly one must happen) so we can sum
 them up.
 This gives us the following equation.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
m_{i,j} & =p_{i,j}+\sum_{k\neq j}p_{i,k}(m_{k,j}+1)\nonumber \\
 & =p_{i,j}+\sum_{k}p_{i,k}(m_{k,j}+1)-p_{i,j}(m_{j,j}+1)\nonumber \\
 & =p_{i,j}+\sum_{k}p_{i,k}m_{k,j}+\sum_{k}p_{i,k}-p_{i,j}m_{j,j}-p_{i,j}\nonumber \\
 & =\sum_{k}p_{i,k}m_{k,j}+1-p_{i,j}m_{j,j}\label{eq:mfp1}
\end{align}

\end_inset

Looking at equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:mfp1"
plural "false"
caps "false"
noprefix "false"

\end_inset

 we see that 
\begin_inset Formula $m_{j,j}$
\end_inset

 appears.
 We can treat this as the 
\emph on
recurrence
\emph default
 time, or we can let 
\begin_inset Formula $m_{j,j}=0$
\end_inset

 because we are already in 
\begin_inset Formula $j$
\end_inset

.
 The equation is simplified by the latter, so we will choose that.
 Note that 
\begin_inset Formula $m_{n,j}$
\end_inset

 is the same as 
\begin_inset Formula $m_{1,j}$
\end_inset

 if we do not count the recurrence loop.
 Since it is not labeled with a stimulus, we will not count it.
 This allows us to reason as follows.
\begin_inset Formula 
\begin{align}
m_{i,j} & =\sum_{k}p_{i,k}m_{k,j}+1\nonumber \\
 & =\sum_{k=1}^{n-1}p_{i,k}m_{k,j}+p_{i,n}m_{n,j}+1\nonumber \\
 & =\sum_{k=1}^{n-1}p_{i,k}m_{k,j}+p_{i,n}m_{1,j}+1\nonumber \\
 & =\sum_{k=1}^{n-1}p_{i,k}m_{k,j}+\left(1-\sum_{k=1}^{n-1}p_{i,k}\right)m_{1,j}+1\label{eq:mfp2}
\end{align}

\end_inset

Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:mfp2"
plural "false"
caps "false"
noprefix "false"

\end_inset

 depends only on 
\begin_inset Formula $Q$
\end_inset

, which is useful.
 Let 
\begin_inset Formula $Z$
\end_inset

 be a marix whose first column is all ones, with all other entries zero.
 That is, 
\begin_inset Formula $Z=[\delta_{1,j}]$
\end_inset

.
 To sum the rows of the 
\begin_inset Formula $Q$
\end_inset

 matrix we multiply by 
\begin_inset Formula $U$
\end_inset

 on the right.
 These give the following matrix equation.
\begin_inset Formula 
\begin{align*}
M & =QM+(U-QU)ZM+U\\
M-QM & =(I-Q)UZM+U\\
(I-Q)M & =(I-Q)UZM+U\\
(I-Q)^{-1}(I-Q)M & =(I-Q)^{-1}(I-Q)UZM+U\\
M & =UZM+U\\
M-UZM & =U\\
(I-UZ)M & =U
\end{align*}

\end_inset

Consider 
\begin_inset Formula $I-UZ$
\end_inset

.
 This is equivalent to the following.
\begin_inset Formula 
\begin{align*}
\delta_{i,j}-\sum_{k}z_{k,j} & =\delta_{i,j}-\sum_{k}\delta_{1,j}\\
 & =\delta_{i,j}-\delta_{1,j}
\end{align*}

\end_inset


\end_layout

\end_body
\end_document
