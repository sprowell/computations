#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
initials
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Markov Computations
\end_layout

\begin_layout Initial
\begin_inset Argument 2
status open

\begin_layout Plain Layout
M
\end_layout

\end_inset


\begin_inset Argument 3
status open

\begin_layout Plain Layout
any
\end_layout

\end_inset

 of the results and derivations in this chapter are taken directly from
 
\begin_inset CommandInset citation
LatexCommand cite
key "kemmeny1976finite"
literal "true"

\end_inset

, though the derivations presented here are likely much more detailed.
 The former reference focuses on Markov chains more generally, and is the
 appropriate source to consult for general questions.
\end_layout

\begin_layout Section
Representing models
\end_layout

\begin_layout Standard
Consider the simple model of fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Example-model"

\end_inset

.
 We can express this model in a computer-readable manner in many different
 ways, but one relatively human-friendly manner is TML.
 TML is a text-based language explicitly developed for representing Markov
 chain usage models 
\begin_inset CommandInset citation
LatexCommand cite
key "prowell2000tml"
literal "true"

\end_inset

.
 The given model is equivalent to the following TML.
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/example.eps
	scale 75

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Example-model"

\end_inset

Example model
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
\begin_inset listings
lstparams "language=TML"
inline false
status open

\begin_layout Plain Layout

model example
\end_layout

\begin_layout Plain Layout

[Enter]  ($  1  $)  
\begin_inset Quotes eld
\end_inset

a
\begin_inset Quotes erd
\end_inset

  [A]
\end_layout

\begin_layout Plain Layout

[A]      ($ 1/2 $)  "b"  [B]
\end_layout

\begin_layout Plain Layout

         ($ 1/2 $)  "c"  [C]
\end_layout

\begin_layout Plain Layout

[B]      ($ 1/2 $)  "b"  [B]
\end_layout

\begin_layout Plain Layout

         ($ 1/4 $)  "c"  [C]
\end_layout

\begin_layout Plain Layout

         ($ 1/4 $)  "e"  [Exit]
\end_layout

\begin_layout Plain Layout

[C]      ($ 1/4 $)  "a"  [A]
\end_layout

\begin_layout Plain Layout

         ($ 1/2 $)  "e"  [Exit]
\end_layout

\begin_layout Plain Layout

         ($ 1/4 $)  "f"  [Exit]
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A short primer on TML is included as Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:A-Brief-TML"
plural "false"
caps "false"
noprefix "false"

\end_inset

, but we note that whitespace is not significant to TML, and the model could
 have been written in the following form, where the probabilities are inferred.
\end_layout

\begin_layout LyX-Code
\begin_inset listings
lstparams "language=TML"
inline false
status open

\begin_layout Plain Layout

($assume(1) normalize(1)$)
\end_layout

\begin_layout Plain Layout

model example
\end_layout

\begin_layout Plain Layout

[Enter]   "a" [A]
\end_layout

\begin_layout Plain Layout

[A]       "b" [B]
\end_layout

\begin_layout Plain Layout

          "c" [C]
\end_layout

\begin_layout Plain Layout

[B] ($2$) "b" [B]
\end_layout

\begin_layout Plain Layout

          "c" [C]
\end_layout

\begin_layout Plain Layout

          "e" [Exit]
\end_layout

\begin_layout Plain Layout

[C]       "a" [A]
\end_layout

\begin_layout Plain Layout

    ($2$) "e" [Exit]
\end_layout

\begin_layout Plain Layout

          "f" [Exit]
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\begin_layout Standard
There are two special states in this model: the 
\emph on
source
\emph default
 or start state 
\family typewriter
[Enter]
\family default
, and the 
\emph on
sink
\emph default
 or stop state 
\family typewriter
[Exit]
\family default
.
 The sink state represents the end of a single use and thus no usage events
 are possible from this state.
\end_layout

\begin_layout Standard
This model can be described by two matrices.
 For these matrices let the states be indexed in the order 
\family typewriter
[Enter]
\family default
, 
\family typewriter
[A]
\family default
, 
\family typewriter
[B]
\family default
, 
\family typewriter
[C]
\family default
, and 
\family typewriter
[Exit]
\family default
, and let the stimuli be indexed in alphabetic order.
 The first matrix is the 
\emph on
(state) transition matrix
\emph default
, 
\begin_inset Formula $P=[p_{i,j}]$
\end_inset

, for which 
\begin_inset Formula $p_{i,j}$
\end_inset

 is the probability that the next state is 
\begin_inset Formula $j$
\end_inset

 given that the current state is 
\begin_inset Formula $i$
\end_inset

.
 For the example model the transition matrix is the following.
\begin_inset Formula 
\[
P=\left[\begin{array}{ccccc}
0 & 1 & 0 & 0 & 0\\
0 & 0 & \frac{1}{2} & \frac{1}{2} & 0\\
0 & 0 & \frac{1}{2} & \frac{1}{4} & \frac{1}{4}\\
0 & \frac{1}{4} & 0 & 0 & \frac{3}{4}\\
1 & 0 & 0 & 0 & 0
\end{array}\right]
\]

\end_inset

Note that the example matrix has been made 
\emph on
recurrent
\emph default
 by connecting 
\family typewriter
[Exit]
\family default
 back to 
\family typewriter
[Enter]
\family default
 with probability one.
 This will be important for several computations, and is assumed where necessary.
 Note that there are two transitions from state 
\family typewriter
[C]
\family default
 to state 
\family typewriter
[Exit]
\family default
; these two transitions are mutually exclusive, so the probability that
 the next state is 
\family typewriter
[Exit]
\family default
 given that the current state is 
\family typewriter
[C]
\family default
 is the sum of the two: 
\begin_inset Formula $\frac{1}{4}+\frac{1}{2}=\frac{3}{4}$
\end_inset

.
 We can represent the transition matrix in Julia as follows, using rationals.
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

P = [ 0    1    0    0    0
\end_layout

\begin_layout Plain Layout

      0    0  1//2 1//2   0
\end_layout

\begin_layout Plain Layout

      0    0  1//2 1//4 1//4
\end_layout

\begin_layout Plain Layout

      0  1//4   0    0  3//4
\end_layout

\begin_layout Plain Layout

      1    0    0    0    0 ]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Alternatively, we could use the relative weights from the second version
 of the model (with the assumed ones) and row-normalize using Algorithm
 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:row-normalize"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

row_norm([0 1 0 0 0; 0 0 1 1 0; 0 0 2 1 1;
\end_layout

\begin_layout Plain Layout

          0 1 0 0 3; 1 0 0 0 0])
\end_layout

\end_inset


\end_layout

\begin_layout Standard
For many computations it will be useful to have a reduced matrix 
\begin_inset Formula $Q=[q_{i,j}]$
\end_inset

 in which the row and column for the model sink have been removed.
 For the example model the reduced matrix is the following.
\begin_inset Formula 
\[
Q=\left[\begin{array}{cccc}
0 & 1 & 0 & 0\\
0 & 0 & \frac{1}{2} & \frac{1}{2}\\
0 & 0 & \frac{1}{2} & \frac{1}{4}\\
0 & \frac{1}{4} & 0 & 0
\end{array}\right]
\]

\end_inset

Both 
\begin_inset Formula $P$
\end_inset

 and 
\begin_inset Formula $Q$
\end_inset

 are always square matrices.
 We can extract the 
\begin_inset Formula $Q$
\end_inset

 matrix from the 
\begin_inset Formula $P$
\end_inset

 matrix in R as follows.
\end_layout

\begin_layout Quote
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Q = P[1:end-1,1:end-1]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The second matrix is the 
\emph on
stimulus (occurrence) matrix
\emph default
 
\begin_inset Formula $S=[s_{i,j}]$
\end_inset

, for which 
\begin_inset Formula $s_{i,j}$
\end_inset

 is the probability that the next usage event (or 
\emph on
stimulus
\emph default
) will be 
\begin_inset Formula $j$
\end_inset

, given that the current state is 
\begin_inset Formula $i$
\end_inset

.
 For the example model the stimulus matrix is the following.
\begin_inset Formula 
\[
S=\left[\begin{array}{ccccc}
1 & 0 & 0 & 0 & 0\\
0 & \frac{1}{2} & \frac{1}{2} & 0 & 0\\
0 & \frac{1}{2} & \frac{1}{4} & \frac{1}{4} & 0\\
\frac{1}{4} & 0 & 0 & \frac{1}{2} & \frac{1}{4}
\end{array}\right]
\]

\end_inset

The usage models used here are deterministic; a stimulus can only label
 one outgoing transition from a state, so there is no need to sum transition
 probabilities in the stimulus matrix.
 We can represent the stimulus matrix in R in Julia as follows.
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

S = [ 1    0    0  1//4
\end_layout

\begin_layout Plain Layout

      0  1//2 1//2   0
\end_layout

\begin_layout Plain Layout

      0  1//2 1//4   0
\end_layout

\begin_layout Plain Layout

      0    0  1//4 1//2
\end_layout

\begin_layout Plain Layout

      0    0    0  1//4 ]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It will occasionally be convenient to discuss the probability of a transition
 from state 
\begin_inset Formula $i$
\end_inset

 to state 
\begin_inset Formula $j$
\end_inset

 labeled with stimulus 
\begin_inset Formula $k$
\end_inset

.
 This probability will be denoted 
\begin_inset Formula $p_{i,j,k}$
\end_inset

 when needed.
 The 
\emph on
restriction
\emph default
 of a matrix 
\begin_inset Formula $A$
\end_inset

 to just those elements corresponding to stimulus 
\begin_inset Formula $k$
\end_inset

 will be denoted 
\begin_inset Formula $A|_{k}$
\end_inset

.
 Thus 
\begin_inset Formula $Q|_{k}=[q_{i,j,k}]$
\end_inset

 for fixed 
\begin_inset Formula $k$
\end_inset

, and we also have the following.
\begin_inset Formula 
\[
Q=\sum_{k}Q|_{k}
\]

\end_inset


\end_layout

\begin_layout Standard
Throughout the rest of this document, the source will be assumed to have
 index one, while the sink will be assumed to have the highest index 
\begin_inset Formula $n$
\end_inset

.
 The number of stimuli for a model will be denoted 
\begin_inset Formula $s$
\end_inset

.
 Thus 
\begin_inset Formula $P$
\end_inset

 is always an 
\begin_inset Formula $n\times n$
\end_inset

 matrix, while 
\begin_inset Formula $S$
\end_inset

 is always an 
\begin_inset Formula $(n-1)\times s$
\end_inset

 matrix, since there can be no outgoing arcs (other than the unlabeled recurrenc
e loop) from the sink.
\end_layout

\begin_layout Standard
For every state 
\begin_inset Formula $i$
\end_inset

 in a connected model, there is a non-zero probability path from the source
 to 
\begin_inset Formula $i$
\end_inset

, and a non-zero probability path from 
\begin_inset Formula $i$
\end_inset

 to the sink.
 Because of the recurrence loop the graph of the model is strongly connected,
 meaning that from any state 
\begin_inset Formula $i$
\end_inset

 there is a path to any other state 
\begin_inset Formula $j$
\end_inset

.
 It follows that 
\begin_inset Formula $P$
\end_inset

 is an irreducible matrix (see Theorem 6.2.24 in 
\begin_inset CommandInset citation
LatexCommand cite
key "horn1985matrix"
literal "true"

\end_inset

).
 All models will be assumed to be connected in this manner.
\end_layout

\begin_layout Section
Computing the number of occurrences of a state in a test case
\end_layout

\begin_layout Standard
The number of occurrences of a state in a random walk from source to sink
 (a test case) can be computed using the reduced matrix 
\begin_inset Formula $Q$
\end_inset

.
 If the sink is made absorbing (letting 
\begin_inset Formula $p_{n,n}=1$
\end_inset

 and 
\begin_inset Formula $p_{n,1}=0$
\end_inset

), then one can compute the number of occurrences of a state prior to absorption
 at the sink.
 Let 
\begin_inset Formula $T$
\end_inset

 denote the set of transient (non-absorbing) states, which will be every
 state other than the sink.
 Let 
\begin_inset Formula $n_{i,j}$
\end_inset

 be a random variable
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
This is 
\size normal
\emph on
potentially
\emph default
 problematic, since we are now using 
\begin_inset Formula $n$
\end_inset

 for the number of states and 
\begin_inset Formula $n_{i,j}$
\end_inset

 for a random variable.
 However, we can always distinguish them, as the random variable is always
 subscripted.
\end_layout

\end_inset

 counting the number of occurrences of state 
\begin_inset Formula $j$
\end_inset

 prior to absorption, given that one starts in state 
\begin_inset Formula $i$
\end_inset

 (if 
\begin_inset Formula $i=j$
\end_inset

 then we count the initial occurence, too, and use 
\begin_inset Formula $\delta_{i,j}$
\end_inset

 to do that).
 From 
\begin_inset Formula $i$
\end_inset

 we may move to absorbing state 
\begin_inset Formula $k$
\end_inset

 (in our models, the sink 
\begin_inset Formula $n$
\end_inset

) with probability 
\begin_inset Formula $p_{i,k}$
\end_inset

 and gain contribution 
\begin_inset Formula $\delta_{i,j}$
\end_inset

.
 Otherwise we move to a transient state 
\begin_inset Formula $k$
\end_inset

 and gain contribution 
\begin_inset Formula $\delta_{i,j}$
\end_inset

 from the initial state plus 
\begin_inset Formula $n_{k,j}$
\end_inset

 from the later steps of the realization.
 Since these different possibilities are disjoint, we can simply sum them
 up.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
This derivation may seem excessive, but we include this detail to provide
 a pattern for future derivations which may be less obvious.
 We will skip the initial steps, which are 
\begin_inset Quotes eld
\end_inset

obvious,
\begin_inset Quotes erd
\end_inset

 in future derivations.
\end_layout

\end_inset


\begin_inset Formula 
\begin{align}
\E{n_{i,j}} & =\E{\sum_{k\notin T}p_{i,k}\delta_{i,j}+\sum_{k\in T}p_{i,k}(\delta_{i,j}+n_{k,j})}\nonumber \\
 & =\E{\sum_{k\notin T}p_{i,k}\delta_{i,j}}+\E{\sum_{k\in T}p_{i,k}(\delta_{i,j}+n_{k,j})}\nonumber \\
 & =\sum_{k\notin T}\E{p_{i,k}\delta_{i,k}}+\sum_{k\in T}\E{p_{i,k}(\delta_{i,j}+n_{k,j})}\nonumber \\
 & =\sum_{k\notin T}p_{i,k}\delta_{i,j}+\sum_{k\in T}p_{i,k}\E{\delta_{i,j}+n_{k,j}}\nonumber \\
 & =\sum_{k\notin T}p_{i,k}\delta_{i,j}+\sum_{k\in T}p_{i,k}\left(\delta_{i,j}+\E{n_{k,j}}\right)\nonumber \\
 & =\sum_{k\notin T}p_{i,k}\delta_{i,j}+\sum_{k\in T}p_{i,k}\delta_{i,j}+\sum_{k\in T}p_{i,k}\E{n_{k,j}}\nonumber \\
 & =\left(\sum_{k\notin T}p_{i,k}\delta_{i,j}+\sum_{k\in T}p_{i,k}\delta_{i,j}\right)+\sum_{k\in T}p_{i,k}\E{n_{k,j}}\nonumber \\
 & =\sum_{k}p_{i,k}\delta_{i,j}+\sum_{k\in T}p_{i,k}\E{n_{k,j}}\nonumber \\
 & =\delta_{i,j}\sum_{k}p_{i,k}+\sum_{k\in T}p_{i,k}\E{n_{k,j}}\nonumber \\
 & =\delta_{i,j}+\sum_{k\in T}p_{i,k}\E{n_{k,j}}\label{eq:E(n(i,j))}
\end{align}

\end_inset

Let 
\begin_inset Formula $N=\left[\E{n_{i,j}}\right]$
\end_inset

 be the matrix of these expectations.
 Then eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:E(n(i,j))"
plural "false"
caps "false"
noprefix "false"

\end_inset

 can be re-written in matrix form as follows.
\begin_inset Formula 
\begin{align}
N & =I+QN\nonumber \\
N-QN & =I\nonumber \\
(I-Q)N & =I\nonumber \\
N & =(I-Q)^{-1}\label{eq:N}
\end{align}

\end_inset

We can express this in Julia as follows.
 Note that 
\family typewriter
I
\family default
 is the appropriate identity matrix defined in the 
\family typewriter
LinearAlgebra
\family default
 package.
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

N = inv(I-Q)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The matrix 
\begin_inset Formula $N$
\end_inset

 defined by eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:N"

\end_inset

 is called the 
\emph on
fundamental matrix
\emph default
 for absorbing chains.
 Many Markov chain results can be obtained from this fundamental matrix.
 The expected number of occurences of each state exists and is finite for
 our chains (because absorption is certain); we can therefore conclude that
 the inverse in eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:N"

\end_inset

 exists.
\end_layout

\begin_layout Standard
What about the variance associated with this expectation? We need to find
 the second moment 
\begin_inset Formula $\E{n_{i,j}^{2}}$
\end_inset

, and we can do this using the same method as we did for 
\begin_inset Formula $\E{n_{i,j}}$
\end_inset

, above.
 If we start in state 
\begin_inset Formula $i$
\end_inset

 then we may move to an absorbing state 
\begin_inset Formula $k$
\end_inset

 (in the specific case of our models, only the sink 
\begin_inset Formula $n$
\end_inset

) with probability 
\begin_inset Formula $p_{i,k}$
\end_inset

 and gain contribution 
\begin_inset Formula $\delta_{i,j}^{2}$
\end_inset

.
 Otherwise we move to a transient state 
\begin_inset Formula $k$
\end_inset

 and gain the square of the sum of 
\begin_inset Formula $\delta_{i,j}$
\end_inset

 (from the initial state) and 
\begin_inset Formula $n_{k,j}$
\end_inset

 (from the later steps).
 This gives the following equation where, we note, 
\begin_inset Formula $\delta_{i,j}^{2}=\delta_{i,j}$
\end_inset

.
\begin_inset Formula 
\begin{align}
\E{n_{i,j}^{2}} & =\sum_{k\notin T}p_{i,k}\delta_{i,j}^{2}+\sum_{k\in T}p_{i,k}\E{(\delta_{i,j}+n_{k,j})^{2}}\nonumber \\
 & =\sum_{k\notin T}p_{i,k}\delta_{i,j}^{2}+\sum_{k\in T}p_{i,k}\E{\delta_{i,j}^{2}+2\delta_{i,j}n_{k,j}+n_{k,j}^{2}}\nonumber \\
 & =\sum_{k\notin T}p_{i,k}\delta_{i,j}^{2}+\sum_{k\in T}p_{i,k}\left(\E{\delta_{i,j}^{2}}+\E{2\delta_{i,j}n_{k,j}}+\E{n_{k,j}^{2}}\right)\nonumber \\
 & =\sum_{k\notin T}p_{i,k}\delta_{i,j}+\sum_{k\in T}p_{i,k}\left(\delta_{i,j}+2\delta_{i,j}\E{n_{k,j}}+\E{n_{k,j}^{2}}\right)\nonumber \\
 & =\sum_{k\notin T}p_{i,k}\delta_{i,j}+\sum_{k\in T}p_{i,k}\delta_{i,j}+\sum_{k\in T}p_{i,k}2\delta_{i,j}\E{n_{k,j}}+\sum_{k\in T}p_{i,k}\E{n_{k,j}^{2}}\nonumber \\
 & =\delta_{i,j}\sum_{k}p_{i,k}+2\sum_{k\in T}\delta_{i,j}p_{i,k}\E{n_{k,j}}+\sum_{k\in T}p_{i,k}\E{n_{k,j}^{2}}\nonumber \\
 & =\delta_{i,j}+2\delta_{i,j}\sum_{k\in T}p_{j,k}\E{n_{k,j}}+\sum_{k\in T}p_{i,k}\E{n_{k,j}^{2}}\label{eq:E(n2(i,j))}
\end{align}

\end_inset

Let 
\begin_inset Formula $N_{2}=\left[\E{n_{i,j}^{2}}\right]$
\end_inset

 be the matrix of these expectations.
 Then eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:E(n2(i,j))"

\end_inset

 can be re-written in matrix form as follows.
\begin_inset Formula 
\begin{align}
N_{2} & =I+2(QN)_{d}+QN_{2}\nonumber \\
N_{2}-QN_{2} & =I+2(QN)_{d}\nonumber \\
N_{2}(I-Q) & =I+2(QN)_{d}\nonumber \\
N_{2} & =(I-Q)^{-1}(I+2(QN)_{d})\nonumber \\
N_{2} & =N(I+2(QN)_{d})\nonumber \\
N_{2} & =N+2N(QN)_{d}\label{eq:N2-1}
\end{align}

\end_inset

Since we already know 
\begin_inset Formula $N=I+QN$
\end_inset

, we can conclude that 
\begin_inset Formula $QN=N-I$
\end_inset

.
 Further, we know 
\begin_inset Formula $I_{d}=I,$
\end_inset

 so 
\begin_inset Formula $(N-I)_{d}=N_{d}-I$
\end_inset

.
 We substitute in eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:N2-1"

\end_inset

 and obtain the following.
\begin_inset Formula 
\begin{align}
N_{2} & =N+2N(N-I)_{d}\nonumber \\
 & =N+2N(N_{d}-I)\nonumber \\
 & =N+2NN_{d}-2N\nonumber \\
 & =2NN_{d}-N\nonumber \\
 & =N(2N_{d}-I)\label{eq:N2}
\end{align}

\end_inset

Now, with eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:N2"

\end_inset

 in hand, we can compute the matrix of variances as 
\begin_inset Formula $\left[\Var{n_{i,j}}\right]=N_{2}-N\circ N$
\end_inset

.
\end_layout

\begin_layout Standard
Computing the matrix of variances in Julia, given the fundamental matrix
 
\family typewriter
N
\family default
, is quite easy.
 We use 
\family typewriter
diag(N)
\family default
 to extract the diagonal vector from 
\family typewriter
N
\family default
, then use 
\family typewriter
Diagonal
\family default
 to promote the vector back to a matrix.
 To construct 
\begin_inset Formula $N\circ N$
\end_inset

 we use the 
\begin_inset Quotes eld
\end_inset

dot
\begin_inset Quotes erd
\end_inset

 form of multiplication: 
\family typewriter
N.*N
\family default
.
 Putting it all together, we have the following sequence in Julia.
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Nd = Diagonal(diag(N))
\end_layout

\begin_layout Plain Layout

N2 = N*(2Nd - I)
\end_layout

\begin_layout Plain Layout

VarN = N2 - N.*N
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\end_layout

\end_inset


\end_layout

\begin_layout Standard
These results allow the computation of the expected number of occurrences
 for each state and the associated variance by the Julia function in algorithm
 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:N"

\end_inset

.
 Note that for a usage model one is primarily concerned with only the first
 row of the returned matrices, since one is concerned with the behavior
 when the model is started from the source.
 The results obtained for the example model are presented in table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:N"

\end_inset

.
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:N"

\end_inset

Compute the expected number of occurrences of each state
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

"""
\end_layout

\begin_layout Plain Layout

Compute the non-terminal expectation and
\end_layout

\begin_layout Plain Layout

variance matrices for the stochastic matrix
\end_layout

\begin_layout Plain Layout

P.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Examples
\end_layout

\begin_layout Plain Layout

```julia-repl
\end_layout

\begin_layout Plain Layout

julia> N,V = get_nte(P)
\end_layout

\begin_layout Plain Layout

julia> N[1,1:end] V[1,1:end]
\end_layout

\begin_layout Plain Layout

```
\end_layout

\begin_layout Plain Layout

"""
\end_layout

\begin_layout Plain Layout

function get_nte(P::Array)
\end_layout

\begin_layout Plain Layout

    Q = P[1:end-1,1:end-1]
\end_layout

\begin_layout Plain Layout

    N = inv(I-Q)
\end_layout

\begin_layout Plain Layout

    Nd = Diagonal(diag(N))
\end_layout

\begin_layout Plain Layout

    N2 = N * (2Nd - I)
\end_layout

\begin_layout Plain Layout

    V = N2 - N.*N
\end_layout

\begin_layout Plain Layout

    return N,V
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:N"

\end_inset

Expected occurrence and associated variance for each state
\end_layout

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
State
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Occurrence
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Variance
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(visits per test case)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[Enter]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.000
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[A]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.231
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.284 0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[B]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.231
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.556
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[C]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.923 1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.497 0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[Exit]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.000
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.000
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $l$
\end_inset

 denote the number of state transitions from the source to the sink in a
 test case.
 The expected length 
\begin_inset Formula $\E l$
\end_inset

 of a test case generated from a Markov chain usage model can be quickly
 computed once 
\begin_inset Formula $N$
\end_inset

 is known by just summing the expected occurrences of each state.
\begin_inset Formula 
\[
\E l=\E{\sum_{k}n_{1,k}}=\sum_{k}\E{n_{1,k}}
\]

\end_inset

That is, the average length of a test case is the number of state transitions
 from the source to the sink.
 Note that 
\begin_inset Formula $\E l$
\end_inset

 does not include the sink; the total average number of 
\emph on
state visits
\emph default
 (including the sink) is one more, since the sink is always visited exactly
 once.
 In a later section we will revisit this and also discuss how to obtain
 an associated variance.
\end_layout

\begin_layout Section
Computing the long-run state probabilities
\end_layout

\begin_layout Standard
Assume that many test cases (random walks from source to sink) are generated
 from a usage model.
 For each state one can sum the number of occurrences of that state, and
 then divide by this by the total number of occurrences of all states.
 As the number of test cases becomes very large, this ratio will approach
 a fixed value called the 
\emph on
long-run occupancy
\emph default
 or 
\emph on
long-run probability
\emph default

\begin_inset Foot
status collapsed

\begin_layout Plain Layout
This is the 
\emph on
frequentist
\emph default
 definition of probability.
\end_layout

\end_inset

 of the state.
 Since the usage model is always in one of its states, the sum of all long-run
 occupancies is one.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\Pi=[\pi_{1},\pi_{2},\ldots,\pi_{n}]$
\end_inset

 be the vector of long-run probabilities for the 
\begin_inset Formula $n$
\end_inset

 states.
 This vector can be found for a given transition matrix 
\begin_inset Formula $P$
\end_inset

 as the unique stochastic vector solution to the left-eigenvector equation
 for eigenvalue 1.
\begin_inset Formula 
\begin{equation}
\Pi=\Pi P\label{eq:Perron}
\end{equation}

\end_inset

The left-eigenvector 
\begin_inset Formula $\Pi$
\end_inset

 is sometimes called the 
\emph on
Perron
\emph default
 eigenvector.
 Eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Perron"

\end_inset

 is equivalent to the following system of equations.
\begin_inset Formula 
\begin{align*}
\pi_{1} & =\pi_{1}p_{1,1}+\pi_{2}p_{2,1}+\cdots+\pi_{n}p_{n,1}\\
\pi_{2} & =\pi_{1}p_{1,2}+\pi_{2}p_{2,2}+\cdots+\pi_{n}p_{n,2}\\
 & \vdots\\
\pi_{n} & =\pi_{1}p_{1,n}+\pi_{2}p_{2,n}+\cdots+\pi_{n}p_{n,n}\\
1 & =\pi_{1}+\pi_{2}+\cdots+\pi_{n}
\end{align*}

\end_inset

Note that there are 
\begin_inset Formula $n$
\end_inset

 unknowns and 
\begin_inset Formula $n+1$
\end_inset

 equations.
 Incidentally, each row of 
\begin_inset Formula $P^{\infty}=\lim_{n\rightarrow\infty}P^{n}$
\end_inset

 is equal to the vector 
\begin_inset Formula $\Pi$
\end_inset

, unless 
\begin_inset Formula $P$
\end_inset

 is periodic 
\begin_inset CommandInset citation
LatexCommand cite
key "kemmeny1976finite"
literal "true"

\end_inset

.
 There are many ways to solve this system.
 For a simple solution by hand, back-substitution will work just fine using
 the above equations.
\end_layout

\begin_layout Standard
The fundamental matrix 
\begin_inset Formula $N$
\end_inset

 can also be used to obtain 
\begin_inset Formula $\Pi$
\end_inset

.
 The average number of state visits in a test case is 
\begin_inset Formula $\E l+1$
\end_inset

.
 The fraction of time one spends in state 
\begin_inset Formula $i$
\end_inset

 in the long run is 
\begin_inset Formula $\pi_{i}$
\end_inset

, so the average number of times state 
\begin_inset Formula $i$
\end_inset

 will be visited in a single test case is 
\begin_inset Formula $\pi_{i}(\E l+1)$
\end_inset

.
 We conclude the following.
\begin_inset Formula 
\begin{align}
\E{n_{1,i}} & =\pi_{i}\left(\E l+1\right)\nonumber \\
\pi_{i} & =\frac{\E{n_{1,i}}}{\E l+1}\label{eq:pi}
\end{align}

\end_inset

Note that 
\begin_inset Formula $\E{n_{1,n}}$
\end_inset

 is not computed by equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:N"

\end_inset

, but we can conclude that 
\begin_inset Formula $\E{n_{1,n}}=1$
\end_inset

 since the sink is always visited exactly once per test case.
 Algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Compute-the-Perron"

\end_inset

 uses this relationship to compute 
\begin_inset Formula $\Pi$
\end_inset

.
 The results for the example model are presented in table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:pi"

\end_inset

.
 The algorithm does not give a value for the sink, but that can be obtained
 by subtracting the sum of the other values from one.
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:Compute-the-Perron"

\end_inset

Compute the Perron eigenvector (long-run probabilities)
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

"""
\end_layout

\begin_layout Plain Layout

Compute the Perron eigenvector for the
\end_layout

\begin_layout Plain Layout

stochastic matrix P and return it.
  The
\end_layout

\begin_layout Plain Layout

computation is performed by computation
\end_layout

\begin_layout Plain Layout

of the fundamental matrix.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

If the fundamental matrix is available,
\end_layout

\begin_layout Plain Layout

providing it as the optional second
\end_layout

\begin_layout Plain Layout

argument will speed up the computation.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Examples
\end_layout

\begin_layout Plain Layout

```julia-repl
\end_layout

\begin_layout Plain Layout

julia> pv = get_pix(P)
\end_layout

\begin_layout Plain Layout

julia> pv = get_pix(P,N)
\end_layout

\begin_layout Plain Layout

```
\end_layout

\begin_layout Plain Layout

"""
\end_layout

\begin_layout Plain Layout

function get_pi(P::Array, N::Array=get_nte(P)[1])
\end_layout

\begin_layout Plain Layout

    len = 1 + sum(N[1,:])
\end_layout

\begin_layout Plain Layout

    pe = N[1:1,:] ./ len
\end_layout

\begin_layout Plain Layout

    return [pe 1-sum(pe)]
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:pi"

\end_inset

Long-run occupancies
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
State
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Long-run Occupancy
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[Enter]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.185 7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[A]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.228 6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[B]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.228 6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[C]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.171 4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[Exit]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.185 7
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
An alternate method for obtaining the long run distribution is to use an
 iterative method called the 
\emph on
power method
\emph default
.
 Given the 
\begin_inset Formula $i$
\end_inset

th guess at the long-run distribution 
\begin_inset Formula $\Pi_{i}$
\end_inset

, one computes a slightly better guess by 
\begin_inset Formula $\Pi_{i+1}=\Pi_{i}P$
\end_inset

.
 This method is guaranteed to converge to the Perron eigenvector if the
 matrix is 
\emph on
primitive
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
after "p. 516"
key "horn1985matrix"
literal "true"

\end_inset

.
 Without going into too much detail, if there is a non-zero entry on the
 diagonal then the matrix is primitive (though the converse is not true).
 Thus if 
\begin_inset Formula $p_{j,j}\neq0$
\end_inset

 for any 
\begin_inset Formula $j$
\end_inset

, then the power method will converge to the Perron eigenvector.
\end_layout

\begin_layout Standard
One way to guarantee primitivity is to introduce a 
\begin_inset Quotes eld
\end_inset

dummy
\begin_inset Quotes erd
\end_inset

 state 
\begin_inset Formula $d$
\end_inset

 with a self-loop to ensure primitivity (that is, 
\begin_inset Formula $p_{d,d}>0$
\end_inset

), apply the power method, then 
\begin_inset Quotes eld
\end_inset

remove
\begin_inset Quotes erd
\end_inset

 the dummy state and correct for its presence.
 This can be done by adding the dummy state 
\begin_inset Formula $d$
\end_inset

 on the recurrence loop from the sink to the source, so 
\begin_inset Formula $p_{n,d}=1$
\end_inset

, 
\begin_inset Formula $p_{d,d}=1/2$
\end_inset

, and 
\begin_inset Formula $p_{d,1}=1/2$
\end_inset

.
 Flow always passes straight through the dummy state, so any of the probability
 mass absorbed by the dummy state would have been be evenly redistributed
 among the other states.
 This change can be made to the example model's transition matrix 
\begin_inset Formula $P$
\end_inset

 as follows.
\begin_inset Formula 
\[
P'=\left[\begin{array}{cccccc}
0 & 1 & 0 & 0 & 0 & 0\\
0 & 0 & \frac{1}{2} & \frac{1}{2} & 0 & 0\\
0 & 0 & \frac{1}{2} & \frac{1}{4} & \frac{1}{4} & 0\\
0 & \frac{1}{4} & 0 & 0 & \frac{3}{4} & 0\\
0 & 0 & 0 & 0 & 0 & 1\\
\frac{1}{2} & 0 & 0 & 0 & 0 & \frac{1}{2}
\end{array}\right]
\]

\end_inset

(Note that the matrix was primitive 
\emph on
before
\emph default
 this change, since 
\begin_inset Formula $p_{3,3}\neq0$
\end_inset

.) This change guarantees primitivity by making 
\begin_inset Formula $p_{d,d}\neq0$
\end_inset

.
 The power method is then applied to yield the long-run probabilities 
\begin_inset Formula $\Pi$
\end_inset

.
 The entry for the dummy state is dropped from 
\begin_inset Formula $\Pi$
\end_inset

 and the vector is re-normalized to obtain the correct long-run probabilities.
 This is actually easier than it sounds; algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:power-method"

\end_inset

 implements this approach.
 For small matrices (like the example) this is likely not going to save
 any time.
 But for a large matrix and a small change (where the prior vector is known)
 this can save considerable time.
 For the example model convergence to within 
\begin_inset Formula $1\times10^{-4}$
\end_inset

 takes 26 iterations starting from the default (uniform) guess.
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:power-method"

\end_inset

Compute the approximation to the Perron eigenvector via the power method
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

"""
\end_layout

\begin_layout Plain Layout

Compute the Perron eigenvector for the stochastic
\end_layout

\begin_layout Plain Layout

matrix P.
  The computation is performed using the
\end_layout

\begin_layout Plain Layout

power method, and the approximation and the number
\end_layout

\begin_layout Plain Layout

of steps are returned.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

An optional initial guess can be provided, and must
\end_layout

\begin_layout Plain Layout

be a row array whose length is the same as the rank
\end_layout

\begin_layout Plain Layout

of P.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

An optional argument `prec` specifies the required
\end_layout

\begin_layout Plain Layout

precision, and the optional limit `limit` specifies
\end_layout

\begin_layout Plain Layout

the maximum number of iterations allowed.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

```julia-repl
\end_layout

\begin_layout Plain Layout

julia> pe, steps = get_pi_approx(P)
\end_layout

\begin_layout Plain Layout

julia> pe, steps = get_pi_approx(P, limit=100)
\end_layout

\begin_layout Plain Layout

julia> pe, steps = get_pi_approx(P, guess)
\end_layout

\begin_layout Plain Layout

```
\end_layout

\begin_layout Plain Layout

"""
\end_layout

\begin_layout Plain Layout

function get_pi_approx(P::Array,
\end_layout

\begin_layout Plain Layout

        guess::Array = ones(1,size(P,1)) .* 1//size(P,1);
\end_layout

\begin_layout Plain Layout

        prec=eps(0.0)*10, limit=200)
\end_layout

\begin_layout Plain Layout

    n = size(P,1)
\end_layout

\begin_layout Plain Layout

    d = n+1
\end_layout

\begin_layout Plain Layout

    # Assure primitivity.
\end_layout

\begin_layout Plain Layout

    P2 = [P zeros(n,1) ; zeros(1,d)]
\end_layout

\begin_layout Plain Layout

    P2[n,d] = 1
\end_layout

\begin_layout Plain Layout

    P2[d,d] = 1//2
\end_layout

\begin_layout Plain Layout

    P2[d,1] = 1//2
\end_layout

\begin_layout Plain Layout

    P2[n,1] = 0
\end_layout

\begin_layout Plain Layout

    # Refine the guess.
\end_layout

\begin_layout Plain Layout

    yold = [guess guess[end]*2]
\end_layout

\begin_layout Plain Layout

    yold = yold ./ sum(yold)
\end_layout

\begin_layout Plain Layout

    y = yold * P2
\end_layout

\begin_layout Plain Layout

    step = 1
\end_layout

\begin_layout Plain Layout

    while sum(abs.(yold - y)) > prec
\end_layout

\begin_layout Plain Layout

        step += 1
\end_layout

\begin_layout Plain Layout

        if step > limit
\end_layout

\begin_layout Plain Layout

            break
\end_layout

\begin_layout Plain Layout

        end
\end_layout

\begin_layout Plain Layout

        yold = y
\end_layout

\begin_layout Plain Layout

        y *= P2
\end_layout

\begin_layout Plain Layout

    end
\end_layout

\begin_layout Plain Layout

    # Adjust the result to remove the added state.
\end_layout

\begin_layout Plain Layout

    y = y[:,1:n]
\end_layout

\begin_layout Plain Layout

    y = y ./ sum(y)
\end_layout

\begin_layout Plain Layout

    return (y, step)
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Performing sensitivity analysis
\end_layout

\begin_layout Standard
A change in a transition probability impacts the occupancies of all states
 since the model is ergodic.
 Consider the example model and the exit arcs from state 
\family typewriter
[C]
\family default
.
 If one changes the probabilities of 
\family typewriter
"e"
\family default
 or 
\family typewriter
"f"
\family default
 to 0.9, this has a significant effect on the model.
 Alternately, changing the probability of 
\family typewriter
"a"
\family default
 to 0.9 has a very different effect.
 Suppose we are attempting to validate a model against our expectations
 for what a 
\begin_inset Quotes eld
\end_inset

use
\begin_inset Quotes erd
\end_inset

 should look like.
 We discover that the model is spending far too much time in one state versus
 another.
 One way to determine how to adjust model probabilities to correct this
 is to use sensitivity analysis.
\end_layout

\begin_layout Standard
For each pair of state 
\begin_inset Formula $i$
\end_inset

 and 
\begin_inset Formula $j$
\end_inset

 in the model such that 
\begin_inset Formula $0<p_{i,j}<1$
\end_inset

, we can set 
\begin_inset Formula $p_{i,j}$
\end_inset

 to some value 
\begin_inset Formula $0<q<1$
\end_inset

 (adjusting the other probabilities, of course) and compute the long-run
 occupancies.
 We will use the following notation for this new vector.
\begin_inset Formula 
\[
\Pi^{(p_{i,j}=q)}=\left[\pi_{k}^{(p_{i,j}=q)}\right]
\]

\end_inset

The 
\emph on
sensitivity
\emph default
 of state 
\begin_inset Formula $k$
\end_inset

 with respect to the transition from state 
\begin_inset Formula $i$
\end_inset

 to state 
\begin_inset Formula $j$
\end_inset

 is defined as follows.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
The choice of 0.95 and 0.01 is arbitrary, but reasonable.
\end_layout

\end_inset


\begin_inset Formula 
\[
z_{i,j,k}=\frac{\pi_{k}^{(p_{i,j}=0.95)}-\pi_{k}^{(p_{i,j}=0.05)}}{0.90}
\]

\end_inset


\end_layout

\begin_layout Standard
The matrix of sensitivities is computed by algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:sensitivities"

\end_inset

.
 The sensitivities for the example model are given in table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:sensitivities"

\end_inset

.
 We interpret the sensitivities as the effect that increasing the transition
 probability has on the long-run occupancy of each state.
 That is, we would expect that increasing the transition probability from
 state 
\family typewriter
[A]
\family default
 to state 
\family typewriter
[B]
\family default
 will decrease the long-run occupancy of state 
\family typewriter
[C]
\family default
 and increase the long-run occupancy of state 
\family typewriter
[B]
\family default
.
\end_layout

\begin_layout Standard
Suppose that one wishes to direct more of the model's flow to state 
\family typewriter
[C]
\family default
.
 Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:sensitivities"

\end_inset

 indicates that the best way to do so is to increase the probability associated
 with the arc from state 
\family typewriter
[A]
\family default
 to state 
\family typewriter
[C]
\family default
, as this is where we find the largest positive value in the column for
 state 
\family typewriter
[C]
\family default
.
 The best way to increase the length of a test case is to decrease the long-run
 occupancy of state 
\family typewriter
[Exit]
\family default
, which can be done by increasing the probability associated with the transition
 from state 
\family typewriter
[B]
\family default
 to state 
\family typewriter
[B]
\family default
.
 In this small model these results may seem intuitive, but in a large model
 the impact of a change can be counter-intuitive.
 
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:sensitivities"

\end_inset

Compute the matrix of sensitivities
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

"""
\end_layout

\begin_layout Plain Layout

Compute the matrix of arc sensitivities.
  The first
\end_layout

\begin_layout Plain Layout

column of the returned matrix is the source state,
\end_layout

\begin_layout Plain Layout

the second column is the target state.
  The
\end_layout

\begin_layout Plain Layout

remaining columns are the changes in occupancies.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

The initial long-run occupancies vector can be
\end_layout

\begin_layout Plain Layout

provided as the optonal second argument.
  This
\end_layout

\begin_layout Plain Layout

avoids having to compute them before the process
\end_layout

\begin_layout Plain Layout

starts.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

```julia-repl
\end_layout

\begin_layout Plain Layout

julia> sens = get_sensitivities(P)
\end_layout

\begin_layout Plain Layout

julia> sens = get_sensitivities(P, pe)
\end_layout

\begin_layout Plain Layout

```
\end_layout

\begin_layout Plain Layout

"""
\end_layout

\begin_layout Plain Layout

function get_sensitivities(P::Array,
\end_layout

\begin_layout Plain Layout

        pe::Array = get_pi_approx(P)[1])
\end_layout

\begin_layout Plain Layout

    # Loop over all the arcs.
\end_layout

\begin_layout Plain Layout

    P2 = P
\end_layout

\begin_layout Plain Layout

    n = size(P2,1)
\end_layout

\begin_layout Plain Layout

    Z = []
\end_layout

\begin_layout Plain Layout

    for i in 1:n
\end_layout

\begin_layout Plain Layout

        for j in 1:n
\end_layout

\begin_layout Plain Layout

            # If there is an uncertain transition
\end_layout

\begin_layout Plain Layout

            # from i to j, compute the sensitivities.
\end_layout

\begin_layout Plain Layout

            if P[i,j] != 0 && P[i,j] != 1
\end_layout

\begin_layout Plain Layout

                x = 1 - P[i,j] ; t = P[i,1:n]
\end_layout

\begin_layout Plain Layout

                P2[i,1:n] = @.
 t / x * 0.05 ; P2[i,j] = 0.95
\end_layout

\begin_layout Plain Layout

                peh, _ = get_pi_approx(P2, pe)
\end_layout

\begin_layout Plain Layout

                P2[i,1:n] = @.
 t / x * 0.95 ; P2[i,j] = 0.05
\end_layout

\begin_layout Plain Layout

                pel, _ = get_pi_approx(P2, pe)
\end_layout

\begin_layout Plain Layout

                P2[i,1:n] = t
\end_layout

\begin_layout Plain Layout

                row = [i j (peh-pel)./0.9]
\end_layout

\begin_layout Plain Layout

                if size(Z,1) > 0
\end_layout

\begin_layout Plain Layout

                    Z = [Z ; row]
\end_layout

\begin_layout Plain Layout

                else
\end_layout

\begin_layout Plain Layout

                    Z = row
\end_layout

\begin_layout Plain Layout

                end
\end_layout

\begin_layout Plain Layout

            end
\end_layout

\begin_layout Plain Layout

        end
\end_layout

\begin_layout Plain Layout

    end
\end_layout

\begin_layout Plain Layout

    return Z
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:sensitivities"

\end_inset

Transition sensitivities
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="7">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="decimal" decimal_point="." valignment="top">
<column alignment="decimal" decimal_point="." valignment="top">
<column alignment="decimal" decimal_point="." valignment="top">
<column alignment="decimal" decimal_point="." valignment="top">
<column alignment="decimal" decimal_point="." valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
From
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
To
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[Enter]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[A]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[B]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[C]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[Exit]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[A]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[B]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.047 25
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.094 49
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.378 0
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.189 0
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.047 24
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[A]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[C]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.047 25
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.094 49
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.378 0
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.189 0
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.047 24
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[B]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[B]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.163 9
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.201 7
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.680 8
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.151 3
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.163 9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[B]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[C]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.003 152
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.037 82
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.182 8
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.138 7
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.003 151
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[B]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[Exit]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.080 67
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.064 54
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.161 3
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.064 54
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.080 67
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[C]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[A]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.132 7
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.096 50
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.096 50
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.072 37
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.132 7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[C]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[Exit]
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.132 7
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.096 50
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.096 50
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-0.072 37
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.132 7
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Computing other long run statistics
\end_layout

\begin_layout Standard
The long run occupancy of the transition from state 
\begin_inset Formula $i$
\end_inset

 to state 
\begin_inset Formula $j$
\end_inset

 is obtained as 
\begin_inset Formula $\pi_{i}p_{i,j}$
\end_inset

.
 The long run occupancy 
\begin_inset Formula $\sigma_{k}$
\end_inset

 for a particular stimulus 
\begin_inset Formula $k$
\end_inset

 can likewise be obtained by summing the long run occupancies of the arcs
 labeled with that stimulus.
\begin_inset Formula 
\begin{equation}
\sigma_{k}=\frac{1}{1-\pi_{n}}\sum_{i=1}^{n-1}\pi_{i}s_{i,k}\label{eq:sigma_k}
\end{equation}

\end_inset

The factor 
\begin_inset Formula $1/(1-\pi_{n})$
\end_inset

 in equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:sigma_k"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is used to remove the sink from the computation and re-normalize the vector;
 otherwise the 
\begin_inset Formula $\sigma_{i}$
\end_inset

 will not sum to one since some probability mass is absorbed by the sink
 in 
\begin_inset Formula $\pi_{n}$
\end_inset

 but the sink does not contribute to any stimuli.
 Algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:stimulus-occupancies"
plural "false"
caps "false"
noprefix "false"

\end_inset

 computes the stimulus occupancies given the state long-run occupancies
 and the stimulus matrix.
 The results for the example model are given in table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:stimulus-occupancies"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:stimulus-occupancies"

\end_inset

Compute the stimulus long-run occupancies
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

"""
\end_layout

\begin_layout Plain Layout

Compute the stimulus long run occupancies, given the
\end_layout

\begin_layout Plain Layout

stimulus matrix `S` and the long-run state occupancies
\end_layout

\begin_layout Plain Layout

`pe`.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

```julia-repl
\end_layout

\begin_layout Plain Layout

julia> sigma = get_sigma(S, pe)
\end_layout

\begin_layout Plain Layout

```
\end_layout

\begin_layout Plain Layout

"""
\end_layout

\begin_layout Plain Layout

function get_sigma(S, pe)
\end_layout

\begin_layout Plain Layout

    # Compute the nomalization factor.
\end_layout

\begin_layout Plain Layout

    n = size(S,1) ; m = 1/(1-pe[n+1])
\end_layout

\begin_layout Plain Layout

    p2 = pe[:,1:n]
\end_layout

\begin_layout Plain Layout

    # Compute the sum for each element.
\end_layout

\begin_layout Plain Layout

    return (p2*S).*m
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:stimulus-occupancies"

\end_inset

Stimulus occupancies
\end_layout

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stimulus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Long-Run Occupancy
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
a
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.280 7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
b
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.280 7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
c
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.210 5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
d
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.175 4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
e
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.052 63
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Looking back at eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pi"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and recalling that 
\begin_inset Formula $\E{n_{1,n}}=1$
\end_inset

 (or equivalently that 
\begin_inset Formula $1/\pi_{n}-1=\E l$
\end_inset

) we can derive the following.
\begin_inset Formula 
\begin{align*}
\frac{\pi_{j}}{\pi_{n}} & =\left(\frac{\E l+1}{\E{n_{1,n}}}\right)\left(\frac{\E{n_{1,j}}}{\E l+1}\right)\\
 & =\frac{\E{n_{1,j}}}{\E{n_{1,n}}}\\
 & =\E{n_{1,j}}
\end{align*}

\end_inset

This gives a simple way to compute the first row of the matrix 
\begin_inset Formula $N$
\end_inset

 if the long-run occupancies are available.
\end_layout

\begin_layout Standard
We expect to see 
\begin_inset Formula $1/\pi_{j}$
\end_inset

 transitions between visits to state 
\begin_inset Formula $j$
\end_inset

.
 Multiplying this by the fraction of transitions that are visits to state
 
\begin_inset Formula $n$
\end_inset

, given by 
\begin_inset Formula $\pi_{n}$
\end_inset

, we obtain the ratio 
\begin_inset Formula $\pi_{n}/\pi_{j}$
\end_inset

, which is a quick way to compute the expected number of test cases, in
 the long run, between occurrences of state 
\begin_inset Formula $j$
\end_inset

.
\end_layout

\begin_layout Standard
Given that 
\begin_inset Formula $1/\pi_{n}$
\end_inset

 is the expected number of events in a test case, and that we consequently
 expect to encounter state 
\begin_inset Formula $i$
\end_inset

 an average of 
\begin_inset Formula $\pi_{i}/\pi_{n}$
\end_inset

 times, we can expect to observe the transition from state 
\begin_inset Formula $i$
\end_inset

 to state 
\begin_inset Formula $j$
\end_inset

 an average of 
\begin_inset Formula $\pi_{i}p_{i,j}/\pi_{n}$
\end_inset

 times in a test case.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:prob-of-occ-of-states"

\end_inset

Computing the probability of occurrence for states
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $y_{i,j}$
\end_inset

 denote the probability that one visits state 
\begin_inset Formula $j$
\end_inset

 prior to absorption given that one starts in state 
\begin_inset Formula $i$
\end_inset

.
 Once state 
\begin_inset Formula $j$
\end_inset

 is reached, we expect to re-visit it 
\begin_inset Formula $\E{n_{j,j}}$
\end_inset

 times in the same test case.
 Therefore, we conclude that 
\begin_inset Formula $y_{i,j}\E{n_{j,j}}$
\end_inset

 is the average number of times one visits state 
\begin_inset Formula $j$
\end_inset

 prior to reaching the sink, given that one starts in state 
\begin_inset Formula $i$
\end_inset

, which we already know is 
\begin_inset Formula $\E{n_{i,j}}$
\end_inset

.
 This gives the following simple relation.
\begin_inset Formula 
\begin{align}
y_{i,j}\E{n_{j,j}} & =\E{n_{i,j}}\nonumber \\
y_{i,j} & =\frac{\E{n_{i,j}}}{\E{n_{j,j}}}\label{eq:state-probability}
\end{align}

\end_inset

The matrix of state probabilities 
\begin_inset Formula $Y=[y_{i,j}]$
\end_inset

 is computed by algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Compute-the-state"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 The state probabilities, starting from the source, are given in table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Probabilitiy-of-occurrence"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\begin_inset Float algorithm
wide false
sideways false
status collapsed

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:Compute-the-state"

\end_inset

Compute the state probabilities
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

"""
\end_layout

\begin_layout Plain Layout

Compute the probability of occurrence of a state in a
\end_layout

\begin_layout Plain Layout

realization from the transition matrix.
  If the
\end_layout

\begin_layout Plain Layout

fundamental matrix is available, providing it avoids
\end_layout

\begin_layout Plain Layout

recomputation.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

```julia-repl
\end_layout

\begin_layout Plain Layout

julia> Y = get_node_probability(P)
\end_layout

\begin_layout Plain Layout

julia> Y = get_node_probability(P,N)
\end_layout

\begin_layout Plain Layout

```
\end_layout

\begin_layout Plain Layout

"""
\end_layout

\begin_layout Plain Layout

function get_node_probability(P, N = get_nte(P)[1])
\end_layout

\begin_layout Plain Layout

    return N * (Diagonal(1 ./ diag(N)))
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:Probabilitiy-of-occurrence"

\end_inset

Probabilitiy of occurrence of each state
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
State
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Probability of Occurrence
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enter
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
B
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.571 4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
C
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.750 0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exit
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.000
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
An alternative approach that will be useful later works as follows.
 Assume the sink and state 
\begin_inset Formula $j$
\end_inset

 are both made absorbing (that is, 
\begin_inset Formula $p_{j,j}=p_{n,n}=1$
\end_inset

).
 The probability that one is absorbed into state 
\begin_inset Formula $j$
\end_inset

 given that one starts in state 
\begin_inset Formula $i$
\end_inset

 is 
\begin_inset Formula $y_{i,j}$
\end_inset

.
 Starting in state 
\begin_inset Formula $i$
\end_inset

, one may be absorbed into state 
\begin_inset Formula $j$
\end_inset

 in a single step with probability 
\begin_inset Formula $p_{i,j}$
\end_inset

 or, after moving to non-absorbing state 
\begin_inset Formula $k$
\end_inset

, with probability 
\begin_inset Formula $p_{i,k}y_{k,j}$
\end_inset

.
 These alternatives are mutually exclusive, so we may simply sum them up.
 We obtain the following formula.
\begin_inset Formula 
\begin{equation}
y_{i,j}=p_{i,j}+\sum_{k\notin\{j,n\}}p_{i,k}y_{k,j}\label{eq:recurrent-state-probability}
\end{equation}

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:prob-occ-of-arcs"

\end_inset

Computing the probability of occurrence for arcs
\end_layout

\begin_layout Standard
Consider the probability of encountering a particular arc (a transition
 on a particular symbol) in a test case.
 This value can be computed by introducing a new, intermediate state on
 the arc of interest, thus splitting the arc into two arcs.
 The probability of occurrence of the new state in the transformed model
 can be computed, and will be the probability of occurrence of the original
 arc.
 This approach was proposed in 
\begin_inset CommandInset citation
LatexCommand cite
key "sayre1999improved"
literal "false"

\end_inset

, but no closed-form solution was given other than re-applying the method
 of section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:prob-of-occ-of-states"
plural "false"
caps "false"
noprefix "false"

\end_inset

 to the modified model, thus requiring a matrix inversion for every arc.
 A computationally simpler approach will be derived here.
\end_layout

\begin_layout Standard
Assume the arc of interest 
\begin_inset Formula $x$
\end_inset

 originates from state 
\begin_inset Formula $a$
\end_inset

 and terminates at state 
\begin_inset Formula $b$
\end_inset

 with single-step probability 
\begin_inset Formula $p_{x}$
\end_inset

.
 We introduce the new intermediate state 
\begin_inset Formula $\alpha$
\end_inset

 with index 
\begin_inset Formula $n+1$
\end_inset

 (so no other state indices are changed) and let the modified transition
 matrix be denoted 
\begin_inset Formula $\hat{P}=[\hat{p}_{i,j}]$
\end_inset

.
 For the modified matrix we have 
\begin_inset Formula $\hat{p}_{a,\alpha}=p_{x}$
\end_inset

 and 
\begin_inset Formula $\hat{p}_{\alpha,b}=1$
\end_inset

, with zeros elsewhere in the 
\begin_inset Formula $\alpha$
\end_inset

 column and row.
 Because the new state and its arcs replace the original arc 
\begin_inset Formula $x$
\end_inset

, we have 
\begin_inset Formula $\hat{p}_{a,b}=p_{a,b}-p_{x}$
\end_inset

.
 Introduction of the new state has no other effect on the transition matrix,
 so for all other entries 
\begin_inset Formula $1\le i,j\le n$
\end_inset

 we have 
\begin_inset Formula $\hat{p}_{i,j}=p_{i,j}$
\end_inset

.
 The probability of occurrence for 
\begin_inset Formula $\alpha$
\end_inset

 can be computed using eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:recurrent-state-probability"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\begin_inset Formula 
\begin{equation}
y_{i,\alpha}=\hat{p}_{i,\alpha}+\sum_{k\notin\{\alpha,n\}}\hat{p}_{i,k}y_{k,\alpha}\label{eq:y_i,alpha}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\hat{Q}$
\end_inset

 denote the usual 
\begin_inset Formula $Q$
\end_inset

 matrix with the change that 
\begin_inset Formula $\hat{q}_{a,b}=\hat{p}_{a,b}=p_{a,b}-p_{x}=q_{a,b}-p_{x}$
\end_inset

, and let 
\begin_inset Formula $Y_{\alpha}=[y_{i,\alpha}]$
\end_inset

 be the vector of probabilities associated with 
\begin_inset Formula $\alpha$
\end_inset

.
 Note that 
\begin_inset Formula $\hat{Q}Y_{\alpha}$
\end_inset

 differs from 
\begin_inset Formula $QY_{\alpha}$
\end_inset

 by a single entry.
\begin_inset Formula 
\[
\hat{q}_{a,b}y_{b,\alpha}=(q_{a,b}-p_{x})y_{b,\alpha}=q_{a,b}y_{b,\alpha}-p_{x}y_{b,\alpha}
\]

\end_inset

It will be convenient to let 
\begin_inset Formula $\hat{Q}Y_{\alpha}=QY_{\alpha}-C$
\end_inset

 for column vector 
\begin_inset Formula $C$
\end_inset

 defined by 
\begin_inset Formula $c_{a}=p_{x}y_{b,\alpha}$
\end_inset

 and 
\begin_inset Formula $c_{i}=0$
\end_inset

 for all 
\begin_inset Formula $i\neq a$
\end_inset

.
 Finally, note that 
\begin_inset Formula $p_{i,\alpha}\neq0$
\end_inset

 only when 
\begin_inset Formula $i=a$
\end_inset

; thus we let 
\begin_inset Formula $X=[x_{i}]$
\end_inset

 be a column vector for which 
\begin_inset Formula $x_{a}=p_{x}$
\end_inset

 and 
\begin_inset Formula $x_{i}=0$
\end_inset

 otherwise.
 Eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:y_i,alpha"
plural "false"
caps "false"
noprefix "false"

\end_inset

 can be re-written in terms of the vectors 
\begin_inset Formula $Y_{\alpha}$
\end_inset

 and 
\begin_inset Formula $X$
\end_inset

 and the matrix 
\begin_inset Formula $\hat{Q}$
\end_inset

.
 Recalling that 
\begin_inset Formula $(I-Q)^{-1}=N$
\end_inset

 we have the following derivation.
\begin_inset Formula 
\begin{align}
Y_{\alpha} & =X+\hat{Q}Y_{\alpha}\nonumber \\
Y_{\alpha} & =X+QY_{\alpha}-C\nonumber \\
Y_{\alpha}-QY_{\alpha} & =X-C\nonumber \\
(I-Q)Y_{\alpha} & =X-C\nonumber \\
Y_{\alpha} & =(I-Q)^{-1}(X-C)\nonumber \\
Y_{\alpha} & =N(X-C)\label{eq:Yalpha}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
While 
\begin_inset Formula $N$
\end_inset

 and 
\begin_inset Formula $X$
\end_inset

 are known, neither 
\begin_inset Formula $Y_{\alpha}$
\end_inset

 nor 
\begin_inset Formula $C$
\end_inset

 is yet known.
 Re-expressing eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Yalpha"
plural "false"
caps "false"
noprefix "false"

\end_inset

 in terms of elements of the 
\begin_inset Formula $Y_{\alpha}$
\end_inset

 vector gives the following.
\begin_inset Formula 
\begin{equation}
y_{i,\alpha}=\sum_{k\notin\{\alpha,n\}}\E{n_{i,k}}(x_{k}-c_{k})\label{eq:y_i,alpha-d-1}
\end{equation}

\end_inset

The rightmost term in eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:y_i,alpha-d-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is zero except when 
\begin_inset Formula $k=a$
\end_inset

.
 Since 
\begin_inset Formula $x_{k}=p_{x}$
\end_inset

 we can rewrite eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:y_i,alpha-d-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

 as follows.
\begin_inset Formula 
\begin{align}
y_{i,\alpha} & =\E{n_{i,a}}(x_{a}-c_{a})\nonumber \\
 & =\E{n_{i,a}}(p_{x}-c_{a})\nonumber \\
 & =\E{n_{i,a}}(p_{x}-p_{x}y_{b,\alpha})\label{eq:y_i,alpha-d-2}
\end{align}

\end_inset

Eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:y_i,alpha-d-2"
plural "false"
caps "false"
noprefix "false"

\end_inset

 contains two unknowns: 
\begin_inset Formula $y_{i,\alpha}$
\end_inset

 and 
\begin_inset Formula $y_{b,\alpha}$
\end_inset

.
 Consider 
\begin_inset Formula $y_{b,\alpha}$
\end_inset

 with respect to eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:y_i,alpha-d-2"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\begin_inset Formula 
\begin{align}
y_{b,\alpha} & =\E{n_{b,a}}(p_{x}-p_{x}y_{b,\alpha})\nonumber \\
y_{b,\alpha} & =\E{n_{b,a}}p_{x}-\E{n_{b,a}}p_{x}y_{b,\alpha}\nonumber \\
y_{b,\alpha}+\E{n_{b,a}}p_{x}y_{b,\alpha} & =\E{n_{b,a}}p_{x}\nonumber \\
y_{b,\alpha}\left(1+\E{n_{b,a}}p_{x}\right) & =\E{n_{b,a}}p_{x}\nonumber \\
y_{b,\alpha} & =\frac{\E{n_{b,a}}p_{x}}{1+\E{n_{b,a}}p_{x}}\label{eq:y_i,alpha-d-3}
\end{align}

\end_inset

Now the right hand side eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:y_i,alpha-d-3"
plural "false"
caps "false"
noprefix "false"

\end_inset

 can be substituted into eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:y_i,alpha-d-2"
plural "false"
caps "false"
noprefix "false"

\end_inset

 for 
\begin_inset Formula $y_{b,\alpha}$
\end_inset

.
\begin_inset Formula 
\begin{align}
y_{i,\alpha} & =\E{n_{i,a}}(p_{x}-p_{x}y_{b,\alpha})\nonumber \\
 & =\E{n_{i,a}}\left(p_{x}-p_{x}\frac{\E{n_{b,a}}p_{x}}{1+\E{n_{b,a}}p_{x}}\right)\nonumber \\
 & =\E{n_{i,a}}p_{x}\left(1-\frac{\E{n_{b,a}}p_{x}}{1+\E{n_{b,a}}p_{x}}\right)\nonumber \\
 & =\E{n_{i,a}}p_{x}\left(\frac{1+\E{n_{b,a}}p_{x}}{1+\E{n_{b,a}}p_{x}}-\frac{\E{n_{b,a}}p_{x}}{1+\E{n_{b,a}}p_{x}}\right)\nonumber \\
 & =\E{n_{i,a}}p_{x}\left(\frac{1}{1+\E{n_{b,a}}p_{x}}\right)\nonumber \\
 & =\frac{\E{n_{i,a}}p_{x}}{1+\E{n_{b,a}}p_{x}}\label{eq:y_i,alpha-d-4}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
In eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:y_i,alpha-d-4"
plural "false"
caps "false"
noprefix "false"

\end_inset

 all elements are known, and the probability of the arc can be computed
 using the original fundamental matrix and the stimulus matrix.
 Note that if 
\begin_inset Formula $b$
\end_inset

 happens to be the sink, then 
\begin_inset Formula $\E{n_{b,a}}=0$
\end_inset

 when 
\begin_inset Formula $b\neq a$
\end_inset

 (since we are treating the sink as absorbing).
 We emphasize that 
\end_layout

\begin_layout Section
Computing the mean first passage times
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $m_{i,j}$
\end_inset

 be a random variable counting the number of state transitions until the
 first visit to state 
\begin_inset Formula $j$
\end_inset

, given that one starts in state 
\begin_inset Formula $i$
\end_inset

.
 We have two possibilities.
\end_layout

\begin_layout Itemize
We move directly from state 
\begin_inset Formula $i$
\end_inset

 to state 
\begin_inset Formula $j$
\end_inset

 in one step with probability 
\begin_inset Formula $p_{i,j}$
\end_inset

.
\end_layout

\begin_layout Itemize
We move to a state 
\begin_inset Formula $k\neq j$
\end_inset

 with probability 
\begin_inset Formula $p_{i,k}$
\end_inset

, and then subsequently move to 
\begin_inset Formula $j$
\end_inset

 with 
\begin_inset Formula $m_{k,j}$
\end_inset

 steps, plus the initial step.
\end_layout

\begin_layout Standard
These possibilities are disjoint (exactly one must happen) so we can sum
 them up.
 This gives us the following equation.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
m_{i,j} & =p_{i,j}+\sum_{k\neq j}p_{i,k}(m_{k,j}+1)\nonumber \\
 & =p_{i,j}+\sum_{k}p_{i,k}(m_{k,j}+1)-p_{i,j}(m_{j,j}+1)\nonumber \\
 & =p_{i,j}+\sum_{k}p_{i,k}m_{k,j}+\sum_{k}p_{i,k}-p_{i,j}m_{j,j}-p_{i,j}\nonumber \\
 & =\sum_{k}p_{i,k}m_{k,j}+1-p_{i,j}m_{j,j}\label{eq:mfp1}
\end{align}

\end_inset

Looking at equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:mfp1"
plural "false"
caps "false"
noprefix "false"

\end_inset

 we see that 
\begin_inset Formula $m_{j,j}$
\end_inset

 appears.
 We can treat this as the 
\emph on
recurrence
\emph default
 time, or we can let 
\begin_inset Formula $m_{j,j}=0$
\end_inset

 because we are already in 
\begin_inset Formula $j$
\end_inset

.
 The equation is simplified by the latter, so we will choose that.
 Note that 
\begin_inset Formula $m_{n,j}$
\end_inset

 is the same as 
\begin_inset Formula $m_{1,j}$
\end_inset

 if we do not count the recurrence loop.
 Since it is not labeled with a stimulus, we will not count it.
 This allows us to reason as follows.
\begin_inset Formula 
\begin{align}
m_{i,j} & =\sum_{k}p_{i,k}m_{k,j}+1\nonumber \\
 & =\sum_{k=1}^{n-1}p_{i,k}m_{k,j}+p_{i,n}m_{n,j}+1\nonumber \\
 & =\sum_{k=1}^{n-1}p_{i,k}m_{k,j}+p_{i,n}m_{1,j}+1\nonumber \\
 & =\sum_{k=1}^{n-1}p_{i,k}m_{k,j}+\left(1-\sum_{k=1}^{n-1}p_{i,k}\right)m_{1,j}+1\label{eq:mfp2}
\end{align}

\end_inset

Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:mfp2"
plural "false"
caps "false"
noprefix "false"

\end_inset

 depends only on 
\begin_inset Formula $Q$
\end_inset

, which is useful.
 Let 
\begin_inset Formula $Z$
\end_inset

 be a marix whose first column is all ones, with all other entries zero.
 That is, 
\begin_inset Formula $Z=[\delta_{1,j}]$
\end_inset

.
 To sum the rows of the 
\begin_inset Formula $Q$
\end_inset

 matrix we multiply by 
\begin_inset Formula $U$
\end_inset

 on the right.
 These give the following matrix equation.
\begin_inset Formula 
\begin{align*}
M & =QM+(U-QU)ZM+U\\
M-QM & =(I-Q)UZM+U\\
(I-Q)M & =(I-Q)UZM+U\\
(I-Q)^{-1}(I-Q)M & =(I-Q)^{-1}(I-Q)UZM+U\\
M & =UZM+U\\
M-UZM & =U\\
(I-UZ)M & =U
\end{align*}

\end_inset

Consider 
\begin_inset Formula $I-UZ$
\end_inset

.
 This is equivalent to the following.
\begin_inset Formula 
\begin{align*}
\delta_{i,j}-\sum_{k}z_{k,j} & =\delta_{i,j}-\sum_{k}\delta_{1,j}\\
 & =\delta_{i,j}-\delta_{1,j}
\end{align*}

\end_inset


\end_layout

\end_body
\end_document
